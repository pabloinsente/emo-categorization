length(table(df_mturk$participantId)) # 52
length(table(df_uw$participantId)) # 51
###########
# join data
df_uw$participantId <- df_uw$participantId + 100
table(df_mturk$participantId)
table(df_uw$participantId)
df <- rbind(df_mturk, df_uw)
table(df$participantId)
length(table(df$participantId)) # 103
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df, emotion!="Other")
# drop because = to "I don't know what the person in the picture is feeling" Not "The person is feeling uncertainty"
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
# Anger   Disgust      Fear Happiness   Neutral   Sadness  Surprise
# 2291      2125      1578      3185      2971      2657      2440
#####################################
#####################################
# prepare data for ordinal lmer
#####################################
#####################################
# filter(df, sentimentScore == "-0.4404")
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
table(df$participantId)
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantId)
table(df$ethnicityF)
table(df$sexF)
str(df)
df <- na.omit(df)
dim(df)
library(rstatix)
# sentiment scores by emotion
df %>% group_by(emotionF) %>% get_summary_stats(sentimentScore, type = "mean_se")
#
df$sex
df$sexC
df$ethnicity
df$ethnicityC
ord_m1 <- clmm2(
emotionF ~ 1 + sexC.flip*ethnicityC + (1 + sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
# to get random effects correctly
ord_m2 <- clmm(
emotionF ~ 1 + sexC.flip*ethnicityC + (1 + sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
library(tidyverse)
library(ordinal)
library(RColorBrewer)
library(ggforce)
library(papaja)
df_mturk = read_csv("../clean_data_mturk/forced_choice_emotion_mturk_long_format_lmer.csv")
df_uw = read_csv("../clean_data/forced_choice_emotion_uw_students_long_format_lmer.csv")
table(df_mturk$participantId)
table(df_uw$participantId)
length(table(df_mturk$participantId)) # 52
length(table(df_uw$participantId)) # 51
###########
# join data
df_uw$participantId <- df_uw$participantId + 100
table(df_mturk$participantId)
table(df_uw$participantId)
df <- rbind(df_mturk, df_uw)
table(df$participantId)
length(table(df$participantId)) # 103
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df, emotion!="Other")
# drop because = to "I don't know what the person in the picture is feeling" Not "The person is feeling uncertainty"
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
# Anger   Disgust      Fear Happiness   Neutral   Sadness  Surprise
# 2291      2125      1578      3185      2971      2657      2440
#####################################
#####################################
# prepare data for ordinal lmer
#####################################
#####################################
# filter(df, sentimentScore == "-0.4404")
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
table(df$participantId)
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantId)
table(df$ethnicityF)
table(df$sexF)
str(df)
df <- na.omit(df)
dim(df)
library(rstatix)
# sentiment scores by emotion
df %>% group_by(emotionF) %>% get_summary_stats(sentimentScore, type = "mean_se")
#
# 1 Disgust   sentimentScore  2125 -0.599     0
# 2 Anger     sentimentScore  2291 -0.572     0
# 3 Fear      sentimentScore  1578 -0.494     0
# 4 Sadness   sentimentScore  2657 -0.44      0
# 5 Neutral   sentimentScore  2971  0         0
# 6 Surprise  sentimentScore  2440  0.273     0
# 7 Happiness sentimentScore  3185  0.557     0
#####################################
#####################################
# fit lmer with ordinal approach
#####################################
#####################################
library(sjPlot)
df$sexC.flip <- df$sexC * -1
# female = -0.5; male = 0.5
# poc = -0.5; white = 0.5
df$sex
df$sexC
df$sexC.flip
ord_m1 <- clmm2(
emotionF ~ 1 + sexC.flip*ethnicityC + (1 + sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
#######
# summary significant results
summary(ord_m1)
# to get random effects correctly
ord_m2 <- clmm(
emotionF ~ 1 + sexC.flip*ethnicityC + (1 + sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
source("/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/ordinal_lmer_forced_responses_uw_mturk.r", echo=TRUE)
summary(ord_m2)
#######
# summary significant results
summary(ord_m1)
summary(ord_m2)
tab_model(ord_m2)
nominal_test(ord_m2)
# for nominal test
ord_m3 <- clm(
emotionF ~ sexC.flip*ethnicityC + (sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
nominal_test(ord_m3)
summary(ord_m3)
#######
# summary significant results
summary(ord_m1)
summary(ord_m2)
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
df$ethnicityF
df$ethnicityFC <- ifelse(df$ethnicityF == "bipoc", "poc", "white")
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityFC) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
ggsave('accuracy-charts/sex_ethnicity_ordinal_mturk_uw.png', width = 6, height = 4)
df.poc.f <- subset(df, ethnicityF=="uncertain" & sexF=="female")
df.poc.f
df.poc.f <- subset(df, ethnicityF=="poc" & sexF=="female")
df.poc.f
df.poc.f <- subset(df, ethnicityFC=="poc" & sexF=="female")
df.poc.f
table(df.poc.f$ethnicityFC)
table(df.poc.f$sexF)
df.poc.f  %>%
group_by(emotionF)
df.poc.f  %>%
get_summary_stats(emotionF, type = "mean_se")
dplyr::count(df.poc.f, emotionF, sort = TRUE)
df.poc.f %>%
group_by( emotionF ) %>%
summarise( percent = 100 * n() / nrow( df.poc.f ) )
df.poc.f %>%
group_by( emotionF ) %>%
summarise( percent = 100 * n() / nrow( df.poc.f ) )
# dplyr::count(df.poc.f, emotionF, sort = TRUE)
library( dplyr )
df.poc.f %>%
group_by( emotionF ) %>%
summarise( percent = 100 * n() / nrow( df.poc.f ) )
dplyr::count(df.poc.f, emotionF, sort = TRUE)
dplyr::count(df.poc.f, emotionF, sort = TRUE) /
nrow(df.poc.f)
dplyr::count(df.poc.f, emotionF, sort = TRUE) /
nrow(df.poc.f)
nrow(df.poc.f)
dplyr::count(df.poc.f, emotionF, sort = TRUE)
t$n
t<-dplyr::count(df.poc.f, emotionF, sort = TRUE)
t$n
t$prop <- t$n / nrow(df.poc.f)
t
sum(t$prop)
t<-dplyr::count(df.poc.f, emotionF)
t$prop <- t$n / nrow(df.poc.f)
t
# poc male column
df.poc.m <- subset(df, ethnicityFC=="poc" & sexF=="male")
t.poc.f<-dplyr::count(df.poc.m, emotionF)
t.poc.f$prop <- t$n / nrow(df.poc.f)
t.poc.m
# poc male column
df.poc.m <- subset(df, ethnicityFC=="poc" & sexF=="male")
t.poc.m<-dplyr::count(df.poc.m, emotionF)
t.poc.m$prop <- t$n / nrow(df.poc.m)
t.poc.m
# poc female column
df.poc.f <- subset(df, ethnicityFC=="poc" & sexF=="female")
t.poc.f<-dplyr::count(df.poc.f, emotionF)
t.poc.f$prop <- t$n / nrow(df.poc.f)
t.poc.f
# poc female column
df.poc.f <- subset(df, ethnicityFC=="poc" & sexF=="female")
t.poc.f<-dplyr::count(df.poc.f, emotionF)
t.poc.f$prop <- t.poc.f$n / nrow(df.poc.f)
t.poc.f
# poc male column
df.poc.m <- subset(df, ethnicityFC=="poc" & sexF=="male")
t.poc.m<-dplyr::count(df.poc.m, emotionF)
# poc female column
df.poc.f <- subset(df, ethnicityFC=="poc" & sexF=="female")
t.poc.f<-dplyr::count(df.poc.f, emotionF)
t.poc.f$prop <- t.poc.f$n / nrow(df.poc.f)
t.poc.f
# poc male column
df.poc.m <- subset(df, ethnicityFC=="poc" & sexF=="male")
t.poc.m<-dplyr::count(df.poc.m, emotionF)
t.poc.m$prop <- t.poc.m$n / nrow(df.poc.m)
t.poc.m
# white female column
df.white.f <- subset(df, ethnicityFC=="poc" & sexF=="white")
t.white.f<-dplyr::count(df.white.f, emotionF)
t.white.f$prop <- t.white.f$n / nrow(df.white.f)
t.white.f
# white female column
df.white.f <- subset(df, ethnicityFC=="white" & sexF=="female")
t.white.f<-dplyr::count(df.white.f, emotionF)
t.white.f$prop <- t.white.f$n / nrow(df.white.f)
t.white.f
# white male column
df.white.m <- subset(df, ethnicityFC=="white" & sexF=="male")
t.white.m<-dplyr::count(df.white.m, emotionF)
t.white.m$prop <- t.white.m$n / nrow(df.white.m)
t.white.m
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityFC, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
ggsave('accuracy-charts/sex_ordinal_mturk_uw.png', width = 6, height = 4)
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityFC, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
ggsave('accuracy-charts/ethnicity_ordinal_mturk_uw.png', width = 6, height = 4)
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
df$ethnicityFC <- ifelse(df$ethnicityF == "bipoc", "poc", "white")
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityFC) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
ggsave('accuracy-charts/sex_ethnicity_ordinal_mturk_uw.png', width = 6, height = 4)
#### sex percentages
df.sex.f <- subset(df, sexF=="female")
t.sex.f<-dplyr::count(df.sex.f, emotionF)
t.sex.f$prop <- t.sex.f$n / nrow(df.sex.f)
t.sex.f
# male
df.sex.m <- subset(df, sexF=="male")
t.sex.m<-dplyr::count(df.sex.m, emotionF)
t.sex.m$prop <- t.sex.m$n / nrow(df.sex.m)
t.sex.m
t.sex.f
### ethnicity percentages
# poc
df.et.p <- subset(df, ethnicityFC=="poc")
t.et.p<-dplyr::count(df.et.p, emotionF)
t.et.p$prop <- t.et.p$n / nrow(df.et.p)
t.et.p
t.poc.m
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
ggsave('accuracy-charts/sex_ordinal_mturk_uw.png', width = 4, height = 4)
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityFC, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
ggsave('accuracy-charts/ethnicity_ordinal_mturk_uw.png', width = 4, height = 4)
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
df$ethnicityFC <- ifelse(df$ethnicityF == "bipoc", "poc", "white")
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityFC) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
ggsave('accuracy-charts/sex_ethnicity_ordinal_mturk_uw.png', width = 6, height = 4)
t.sex.f
0.149 + 0.194
t.sex.m
0.176 + 0.134
# 0.149 + 0.194 = 0.343
0.126 + 0.132 + 0.100 + 0.156
t.sex.f
0.120  + 0.134  + 0.0827 + 0.152
t.et.p
0.200  + 0.112
0.120 + 0.133 + 0.0946 + 0.169
t.et.p
# white
df.et.w <- subset(df, ethnicityFC=="white")
t.et.w<-dplyr::count(df.et.w, emotionF)
t.et.w$prop <- t.et.w$n / nrow(df.et.w)
t.et.w
0.171 + 0.17
.126 + 0.133  + 0.0884 + .139
library(tidyverse)
library(ordinal)
library(RColorBrewer)
library(ggforce)
library(papaja)
df_mturk_esp = read_csv("../clean_data_mturk_espanol/forced_choice_emotion_mturk_long_format_lmer_espanol.csv")
table(df_mturk_esp$participantId)
length(table(df_mturk_esp$participantId)) # 52
df = read_csv("../clean_data_mturk_espanol/forced_choice_emotion_mturk_long_format_lmer_espanol.csv")
table(df$participantId)
length(table(df$participantId)) # 52
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df, emotion!="Other")
# drop because = to "I don't know what the person in the picture is feeling" Not "The person is feeling uncertainty"
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantId)
table(df$ethnicityF)
table(df$sexF)
str(df)
df <- na.omit(df)
dim(df)
library(rstatix)
# sentiment scores by emotion
df %>% group_by(emotionF) %>% get_summary_stats(sentimentScore, type = "mean_se")
#####################################
#####################################
library(sjPlot)
df$sexC.flip <- df$sexC * -1
# to get random effects correctly
ord_m2 <- clmm(
emotionF ~ 1 + sexC.flip*ethnicityC + (1 + sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
#######
# summary significant results
summary(ord_m2)
tab_model(ord_m2)
# for nominal test
ord_m3 <- clm(
emotionF ~ sexC.flip*ethnicityC + (sexC.flip*ethnicityC|participantId),
data=df,
Hess = TRUE)
#####################
# Nominal test effect
nominal_test(ord_m3)
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
ggsave('accuracy-charts/sex_ordinal_mturk_espanol.png', width = 6, height = 4)
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityFC, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
df$ethnicityFC <- ifelse(df$ethnicityF == "bipoc", "poc", "white")
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityFC, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
ggsave('accuracy-charts/ethnicity_ordinal_mturk_espanol.png', width = 6, height = 4)
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityFC) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
ggsave('accuracy-charts/sex_ethnicity_ordinal_mturk_espanol.png', width = 6, height = 4)
#### sex percentages
# female
df.sex.f <- subset(df, sexF=="female")
t.sex.f<-dplyr::count(df.sex.f, emotionF)
t.sex.f$prop <- t.sex.f$n / nrow(df.sex.f)
t.sex.f
0.172 + 0.170
0.0956 + 0.180  + 0.0621 + 0.144
# male
df.sex.m <- subset(df, sexF=="male")
t.sex.m<-dplyr::count(df.sex.m, emotionF)
t.sex.m$prop <- t.sex.m$n / nrow(df.sex.m)
t.sex.m
0.171 + 0.157
0.0863 + 0.161  + 0.0703 + 0.149
##########################
### ethnicity percentages
# poc
df.et.p <- subset(df, ethnicityFC=="poc")
t.et.p<-dplyr::count(df.et.p, emotionF)
t.et.p$prop <- t.et.p$n / nrow(df.et.p)
t.et.p
0.188 + 0.136
0.0872 + 0.171 + 0.0621 + 0.166
# white
df.et.w <- subset(df, ethnicityFC=="white")
t.et.w<-dplyr::count(df.et.w, emotionF)
t.et.w$prop <- t.et.w$n / nrow(df.et.w)
t.et.w
0.155 + 0.190
0.0947+ 0.170 +0.0701+0.127
