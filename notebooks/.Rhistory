full.interactive.model <- m2
sex.only.model <- m2.sex
ethnicity.only.model <- m2.ethnicityC
sex.ethnicity.additive.model <- m2.add
anova(sex.only.model, ethnicity.only.model, sex.ethnicity.additive.model, full.interactive.model)
(aov.comparison <- anova(sex.only.model, ethnicity.only.model, sex.ethnicity.additive.model, full.interactive.model))
aov.apa.com <- kable(aov.comparison, digits = 3, format = "html", caption = "ANOVA table for model comparison")
cat(aov.apa.com, file = "lmer_output/anova_comparison_lmer_summary_forced_uw_students.html")
cat(aov.apa.com, file = "../../emotions_dashboard/data/anova_comparison_lmer_summary_forced_uw_students.html")
aov.apa.com <- kable(aov.comparison, digits = 3, format = "html", caption = "ANOVA table for model comparison")
cat(aov.apa.com, file = "lmer_output/anova_comparison_lmer_summary_free_uw_students.html")
cat(aov.apa.com, file = "../../emotions_dashboard/data/anova_comparison_lmer_summary_free_uw_students.html")
### get mathematical formula
formula_lmer <- extract_eq(m2)
cat(formula_lmer, file = "lmer_output/formula_lmer_summary_free_uw_students.txt")
cat(formula_lmer, file = "../../emotions_dashboard/data/formula_lmer_summary_free_uw_students.txt")
#extract_eq(m2, use_coefs = TRUE)
### get coefficient table for reporting
tab_model(m2, file = "lmer_output/lmer_summary_free_uw_students.html")
tab_model(m2, file = "../../emotions_dashboard/data/lmer_summary_free_uw_students.html")
## Type III anova table with p-values for F-tests based on Satterthwaite's method
(aov <- anova(m2))
aov.apa <- kable(aov, digits = 3, format = "html", caption = "ANOVA table for LMER coefficients")
cat(aov.apa, file = "lmer_output/anova_lmer_summary_free_uw_students.html")
cat(aov.apa, file = "../../emotions_dashboard/data/anova_lmer_summary_free_uw_students.html")
#####################################
#####################################
# PENDING: UPDATE MODEL INTERPRETATION
#####################################
#####################################
# sex-photo effect:
# The effect of sex-photo on sentiment-score was not significant, b = -0.01602, F(1,51) = 3.7, p = 0.054
# Averaging across POC and Caucasian photo-faces, and controlling for ethnicity and the ethnicity-photo by sex-photo interaction,
# sentiment-scores were -0.016 more negative in response to male faces than female faces.
# ethnicity-photo effect:
# The effect of ethnicity-photo on sentiment-scores was significant, b =  0.028, F(1,51) = 11.9, p < .001.
# For sake of completeness:
# Averaging across female and male photos, and controlling for sex-photo and the sex-photo by ethnicity-photo interaction,
# sentiment-scores were 0.028 more positive in response to caucasian-photos than poc-photos
# Face by odor interaction:
# The face by odor interaction was significant, b = 0.04, F(1,51) = 6.03, p = 0.014.
# For sake of completeness:
# Controlling for lower-order effects, the difference in sentiment-scorees between the two sex-photo conditions
# was 0.04 points greater in the caucasian-photos than in the poc-photos
#####################################
#####################################
# Individual participant data for sex * ethnicity conditions
#####################################
#####################################
s <- svgstring()
p = ggplot(df,aes(sex,sentimentScore,color=ethnicity,group=ethnicity))+
geom_point()+
geom_smooth(method="lm",se=F)+
facet_wrap(~participantId)+
theme_bw()+
scale_color_manual(values=c("#1f77b4", "#ff7f0e"))
p
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/participants_charts_lmer_free_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/participants_charts_lmer_free_uw_students.txt")
dev.off()
#####################################
#####################################
# Check homogeneity of variance
#####################################
#####################################
# https://ademos.people.uic.edu/Chapter18.html
# ANOVA of the between subjects residuals.
# the assumption is that the variance is not going to differ, we would hope to see
# NO STATISTICAL DIFFERENCES in the following procedure (i.e. p>0.05)
df$Model.F.Res<- residuals(m2) #extracts the residuals and places them in a new column in our original data table
df$Abs.Model.F.Res <-abs(df$Model.F.Res) #creates a new column with the absolute value of the residuals
df$Model.F.Res2 <- df$Abs.Model.F.Res^2 #squares the absolute values of the residuals to provide the more robust estimate
Levene.Model.F <- lm(Model.F.Res2 ~ participantId, data=df) #ANOVA of the squared residuals
anova(Levene.Model.F) #displays the results
format(4.440288e-07, scientific = F)
# save to html table
aov.btw.res <- kable(anova(Levene.Model.F), digits = 3, format = "html", caption = "ANOVA table for between subjects residuals")
cat(aov.btw.res, file = "lmer_output/anova_bwt_res_summary_free_uw_students.html")
cat(aov.btw.res, file = "../../emotions_dashboard/data/anova_bwt_res_summary_free_uw_students.html")
# Since the p value < 0.05, we can say that the variance of the residuals is equal and
# therefore the assumption of **homoscedasticity** NOT is met
s <- svgstring(width = 7,
height = 5)
Plot.Model.F <- plot(m2) #creates a fitted vs residual plot
Plot.Model.F
Plot.Model.F <- s()
cat(Plot.Model.F , file = "lmer_output/fitted_vs_residual_plot_free_uw_students.txt")
cat(Plot.Model.F , file = "../../emotions_dashboard/data/fitted_vs_residual_plot_free_uw_students.txt")
dev.off()
## This looks very unsystematic
resid1 <- hlm_resid(m2, level = 1, standardize = TRUE)
s <- svgstring(width = 7,
height = 5)
ggplot(data = resid1, aes(x = participantId, y = .std.ls.resid)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Least-Squares level-1 residuals",
title = "Least-Squares residuals by participant ID")
l1.res <- s()
cat(l1.res , file = "lmer_output/l1_res_plot_free_uw_students.txt")
cat(l1.res , file = "../../emotions_dashboard/data/l1_res_plot_free_uw_students.txt")
dev.off()
## There are quite a couple of large residuals
resid2 = hlm_resid(m2, level = "participantId", standardize = TRUE, include.ls = FALSE)
s <- svgstring(width = 7,
height = 5)
ggplot(data = resid2, aes(x = participantId, y = .std.ranef.intercept)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Random effects - intercept",
title = "Intercept random effects against participant ID")
l2.res.int <- s()
cat(l2.res.int , file = "lmer_output/l2_int_res_plot_free_uw_students.txt")
cat(l2.res.int , file = "../../emotions_dashboard/data/l2_int_res_plot_free_uw_students.txt")
dev.off()
# 43, 9, 16
#
# ggplot(data = resid2, aes(x = participantId, y = .std.ranef.sex_c)) +
#   geom_point(alpha = 0.4) +
#   geom_smooth(method = "loess", se = FALSE) +
#   labs(y = "Level-2 residuals",
#        title = "L2 residuals by participant ID")
# 9, 16
#
#     ggplot(data = resid2, aes(x = participantId, y = .std.ranef.ethnicity_c)) +
#   geom_point(alpha = 0.4) +
#   geom_smooth(method = "loess", se = FALSE) +
#   labs(y = "Level-2 residuals",
#        title = "L2 residuals by participant ID")
# 43
#
# ggplot(data = resid2, aes(x = participantId, y = .std.ranef.sex_c_ethnicity_c)) +
#   geom_point(alpha = 0.4) +
#   geom_smooth(method = "loess", se = FALSE) +
#   labs(y = "Level-2 residuals",
#        title = "L2 residuals by participant ID")
# 43, 9
#####################################
#####################################
# Check normality of error term
#####################################
#####################################
require("lattice")
s <- svgstring(width = 7,
height = 5)
qqmath(m2, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
svg.qqplot <- s()
cat(svg.qqplot, file = "lmer_output/qqplot_lmer_free_uw_students.txt")
cat(svg.qqplot, file = "../../emotions_dashboard/data/qqplot_lmer_free_uw_students.txt")
dev.off()
# looks not normal...
# https://ademos.people.uic.edu/Chapter18.html
# resid_panel(m2)
#####################################
#####################################
# Check influence
#####################################
#####################################
infl <- hlm_influence(m2, level = 1)
# IQR = as.numeric(format(IQR(infl$cooksd)*3, scientific = F))
CutOff = 4/nrow(infl)
print(CutOff)
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = "internal")
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff)
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/influence_datapoints_lmer_free_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/influence_datapoints_lmer_free_uw_students.txt")
dev.off()
high_cooksd = infl[infl$cooksd > CutOff, ] %>%
arrange(desc(cooksd))
head(high_cooksd, n=10)
#### high influence data points
high_cooksd$id
infl.classes <- hlm_influence(m2, level = "participantId")
CutOffGroup = 4/49
CutOffGroup
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = "internal", modify = "dotplot")
dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = CutOffGroup, modify = "dotplot")
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/influence_participants_lmer_free_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/influence_participants_lmer_free_uw_students.txt")
dev.off()
high_cooksd_participants = infl.classes[infl.classes$cooksd > CutOffGroup, ] %>%
arrange(desc(cooksd))
high_cooksd_participants
# participant 43
#####################################
#####################################
# Check leverage
#####################################
#####################################
CutOffLeverage = mean(infl$leverage.overall)*3
CutOffLeverage
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = CutOffLeverage)
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/leverage_datapoints_lmer_free_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/leverage_datapoints_lmer_free_uw_students.txt")
dev.off()
high_leverage = infl[infl$leverage.overall > CutOffLeverage, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage
# high leverage data points
high_leverage$id
CutOffLeverageParticipants = mean(infl.classes$leverage.overall)*3
CutOffLeverageParticipants
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = CutOffLeverageParticipants)
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/leverage_participants_lmer_free_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/leverage_participants_lmer_free_uw_students.txt")
dev.off()
high_leverage_participants = infl.classes[infl.classes$leverage.overall > CutOffLeverageParticipants, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage_participants
## No high leverage participants
#add index column to data frame
df$id <- 1:nrow(df)
high_cooksd$id
high_leverage$id
high_cooksd_participants$participantId
nrow(df)
`%ni%` <- Negate(`%in%`)
df.filtered <- filter(df, id %ni% high_cooksd$id)
df.filtered <- filter(df.filtered, id %ni% high_leverage$id)
df.filtered <- filter(df.filtered, participantId != 43)
nrow(df.filtered)
#####################################
#####################################
# Refitted LMER
# - Excluding outliers; high influence; high leverage observations and participants
# - Heavylmer: Lmer for heavy-tailed residuals
#####################################
#####################################
### traditional lmer approach ####
## without derivatives check
control <- lmerControl(optimizer ="Nelder_Mead", calc.derivs=FALSE, optCtrl=list(maxfun=2e6), check.nobs.vs.nRE = "ignore")
m3 <-lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df.filtered,
control=control)
summary(m3)
### get coefficient table for reporting
tab_model(m3, file = "lmer_output/lmer_refit_summary_free_uw_students.html")
tab_model(m3, file = "../../emotions_dashboard/data/lmer_refit_summary_free_uw_students.html")
## Type III anova table with p-values for F-tests based on Satterthwaite's
## method:
(aov.m3 <- anova(m3))
aov.apa.m3 <- kable(aov.m3, digits = 3, format = "html", caption = "ANOVA table for refitted LMER coefficients")
cat(aov.apa.m3, file = "lmer_output/anova_lmer_refit_summary_free_uw_students.html")
cat(aov.apa.m3, file = "../../emotions_dashboard/data/anova_lmer_refit_summary_free_uw_students.html")
### heavy tailed student-family approach ####
library(heavy)
# https://cran.r-project.org/web/packages/heavy/heavy.pdf
m3.heavy <- heavyLme(sentimentScore ~ 1+ sexC*ethnicityC,
random = ~ 1 + sexC*ethnicityC,
groups= ~ participantId,
data = df.filtered,
family = Student(df = 4))
summary(m3.heavy)
### get coefficient table for reporting
tab_model(m3.heavy, file = "lmer_output/lmer_heavy_summary_free_uw_students.html")
tab_model(m3.heavy, file = "../../emotions_dashboard/data/lmer_heavy_summary_free_uw_students.html")
fixef(m3)["x"]
install.packages("SIMR")
install.packages("simr")
library(simr)
powerSim(m3, nsim=10)
fixef(model1)
fixef(m3)
summary(m3)
fixef(lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df.filtered,
control=control))
fixef(lme4::lmerlmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df.filtered,
control=control))
fixef(lme4::lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df.filtered,
control=control))
powerSim(m3, nsim=10)
power <- powerSim(m3, test=fixed("sexC"), nsim=10)
power
# sex
power <- powerSim(m3, test=fixed("sexC", "z"), seed=123, nsim=10)
fixef(diss_model2)["sexC"]
fixef(m3)["sexC"]
fixed(m3)["sexC"]
fixed(m2)["sexC"]
power
typeof(m3)
library(lme4)
library(car)
library(lmerTest)
library(tidyverse)
library(ragg)
library(HLMdiag)
library(VCA)
library(hrbrthemes)
library(ggResidpanel)
library(sjPlot)
library(webshot)
library(equatiomatic)
library(svglite)
library(knitr)
df = read_csv("../clean_data/forced_choice_emotion_uw_students_long_format_lmer.csv")
head(df)
df %>%  ggplot(aes(x=sentimentScore)) +
geom_histogram(fill="#1f77b4") +
theme_ipsum()
by.sex <- df %>%
ggplot( aes(x=sentimentScore, fill=sex)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#1f77b4", "#ff7f0e")) +
theme_ipsum() +
stat_bin(bins=20) +
labs(fill="")
by.sex
by.age <- df %>%
ggplot( aes(x=sentimentScore, fill=age)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
stat_bin(bins=20) +
labs(fill="")
by.age
by.ethnicity <- df %>%
ggplot( aes(x=sentimentScore, fill=ethnicity)) +
geom_histogram( color="#5e6162", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
stat_bin(bins=20) +
labs(fill="")
by.ethnicity
df %>%
group_by(participantId) %>%
summarise_at(vars(sentimentScore), list(name = mean)) %>%
ggplot(aes(x=name)) +
geom_histogram(color="#5e6162", fill="#66a3a3") +
theme_ipsum()
df %>%
group_by(photoId) %>%
summarise_at(vars(sentimentScore), list(name = mean)) %>%
ggplot(aes(x=name)) +
geom_histogram(color="#5e6162", fill="#66a3a3") +
theme_ipsum()
control=lmerControl(optimizer ="Nelder_Mead", calc.derivs=FALSE,optCtrl=list(maxfun=2e6), check.nobs.vs.nRE = "ignore")
m2<-lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df,
control=control)
summary(m2)
m2.sex <-lmer(
sentimentScore ~ 1 + sexC +  (1+ sexC*ethnicityC|participantId),
data = df,
control=control)
summary(m2.sex)
anova(m2, m2.sex)
m2.ethnicityC <-lmer(
sentimentScore ~ 1 + ethnicityC + (1+ sexC*ethnicityC |participantId),
data = df,
control=control)
summary(m2.ethnicityC)
anova(m2, m2.ethnicityC)
m2.add <-lmer(
sentimentScore ~ 1 + sexC+ethnicityC + (1+sexC*ethnicityC |participantId),
data = df,
control=control)
summary(m2.add)
anova(m2, m2.add)
full.interactive.model <- m2
sex.only.model <- m2.sex
ethnicity.only.model <- m2.ethnicityC
sex.ethnicity.additive.model <- m2.add
anova(sex.only.model, ethnicity.only.model, sex.ethnicity.additive.model, full.interactive.model)
(aov.comparison <- anova(sex.only.model, ethnicity.only.model, sex.ethnicity.additive.model, full.interactive.model))
aov.apa.com <- kable(aov.comparison, digits = 3, format = "html", caption = "ANOVA table for model comparison")
cat(aov.apa.com, file = "lmer_output/anova_comparison_lmer_summary_forced_uw_students.html")
cat(aov.apa.com, file = "../../emotions_dashboard/data/anova_comparison_lmer_summary_forced_uw_students.html")
### get mathematical formula
formula_lmer <- extract_eq(m2)
cat(formula_lmer, file = "lmer_output/formula_lmer_summary_forced_uw_students.txt")
cat(formula_lmer, file = "../../emotions_dashboard/data/formula_lmer_summary_forced_uw_students.txt")
### get coefficient table for reporting
tab_model(m2, file = "lmer_output/lmer_summary_forced_uw_students.html")
tab_model(m2, file = "../../emotions_dashboard/data/lmer_summary_forced_uw_students.html")
(aov <- anova(m2))
aov.apa <- kable(aov, digits = 3, format = "html", caption = "ANOVA table for LMER coefficients")
cat(aov.apa, file = "lmer_output/anova_lmer_summary_forced_uw_students.html")
cat(aov.apa, file = "../../emotions_dashboard/data/anova_lmer_summary_forced_uw_students.html")
s <- svgstring()
p = ggplot(df,aes(sex,sentimentScore,color=ethnicity,group=ethnicity))+
geom_point()+
geom_smooth(method="lm",se=F)+
facet_wrap(~participantId)+
theme_bw()+
scale_color_manual(values=c("#1f77b4", "#ff7f0e"))
p
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/participants_charts_lmer_forced_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/participants_charts_lmer_forced_uw_students.txt")
dev.off()
df$Model.F.Res<- residuals(m2) #extracts the residuals and places them in a new column in our original data table
df$Abs.Model.F.Res <-abs(df$Model.F.Res) #creates a new column with the absolute value of the residuals
df$Model.F.Res2 <- df$Abs.Model.F.Res^2 #squares the absolute values of the residuals to provide the more robust estimate
Levene.Model.F <- lm(Model.F.Res2 ~ participantId, data=df) #ANOVA of the squared residuals
anova(Levene.Model.F) #displays the results
format(4.440288e-07, scientific = F)
# save to html table
aov.btw.res <- kable(anova(Levene.Model.F), digits = 3, format = "html", caption = "ANOVA table for between subjects residuals")
cat(aov.btw.res, file = "lmer_output/anova_bwt_res_summary_forced_uw_students.html")
cat(aov.btw.res, file = "../../emotions_dashboard/data/anova_bwt_res_summary_forced_uw_students.html")
s <- svgstring(width = 7,
height = 5)
Plot.Model.F <- plot(m2) #creates a fitted vs residual plot
Plot.Model.F
Plot.Model.F <- s()
cat(Plot.Model.F , file = "lmer_output/fitted_vs_residual_plot_forced_uw_students.txt")
cat(Plot.Model.F , file = "../../emotions_dashboard/data/fitted_vs_residual_plot_forced_uw_students.txt")
dev.off()
resid1 <- hlm_resid(m2, level = 1, standardize = TRUE)
s <- svgstring(width = 7,
height = 5)
ggplot(data = resid1, aes(x = participantId, y = .std.ls.resid)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Least-Squares level-1 residuals",
title = "Least-Squares residuals by participant ID")
l1.res <- s()
cat(l1.res , file = "lmer_output/l1_res_plot_forced_uw_students.txt")
cat(l1.res , file = "../../emotions_dashboard/data/l1_res_plot_forced_uw_students.txt")
dev.off()
resid2 = hlm_resid(m2, level = "participantId", standardize = TRUE, include.ls = FALSE)
s <- svgstring(width = 7,
height = 5)
ggplot(data = resid2, aes(x = participantId, y = .std.ranef.intercept)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Random effects - intercept",
title = "Intercept random effects against participant ID")
l2.res.int <- s()
cat(l2.res.int , file = "lmer_output/l2_int_res_plot_forced_uw_students.txt")
cat(l2.res.int , file = "../../emotions_dashboard/data/l2_int_res_plot_forced_uw_students.txt")
dev.off()
require("lattice")
s <- svgstring(width = 7,
height = 5)
qqmath(m2, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
svg.qqplot <- s()
cat(svg.qqplot, file = "lmer_output/qqplot_lmer_forced_uw_students.txt")
cat(svg.qqplot, file = "../../emotions_dashboard/data/qqplot_lmer_forced_uw_students.txt")
dev.off()
infl <- hlm_influence(m2, level = 1)
# IQR = as.numeric(format(IQR(infl$cooksd)*3, scientific = F))
CutOff = 4/nrow(infl)
print(CutOff)
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = "internal")
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff)
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/influence_datapoints_lmer_forced_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/influence_datapoints_lmer_forced_uw_students.txt")
dev.off()
high_cooksd = infl[infl$cooksd > CutOff, ] %>%
arrange(desc(cooksd))
head(high_cooksd, n=10)
high_cooksd$id
infl.classes <- hlm_influence(m2, level = "participantId")
CutOffGroup = 4/49
CutOffGroup
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = "internal", modify = "dotplot")
dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = CutOffGroup, modify = "dotplot")
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/influence_participants_lmer_forced_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/influence_participants_lmer_forced_uw_students.txt")
dev.off()
high_cooksd_participants = infl.classes[infl.classes$cooksd > CutOffGroup, ] %>%
arrange(desc(cooksd))
high_cooksd_participants
CutOffLeverage = mean(infl$leverage.overall)*3
CutOffLeverage
s <- svgstring(width = 7,
height = 5)
# dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = CutOffLeverage)
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/leverage_datapoints_lmer_forced_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/leverage_datapoints_lmer_forced_uw_students.txt")
dev.off()
high_leverage = infl[infl$leverage.overall > CutOffLeverage, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage
# high leverage data points
high_leverage$id
