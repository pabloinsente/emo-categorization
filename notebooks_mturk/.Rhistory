library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggplot2)
plot_model(m1)
plot_model(m1, vline.color = "red")
plot_model(m1, transform = "plogis", show.values = TRUE, value.offset = .3)
plot_model(m1, show.values = TRUE, value.offset = .3)
plot_model(m1, type = "pred", terms = "condition.dummy")
plot_model(m1, type = "emm", terms = "condition.dummy")
tab_model(m1)
tab_model(m2)
s <- svgstring(width = 7,
height = 5)
plot_model(m1, type = "pred", terms = "condition.dummy")
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/predicted_prob_mturk.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/predicted_prob_mturk.txt")
dev.off()
tab_model(m1)
tab_model(m1,transform =  "plogis")
### get coefficient table for reporting
# odds ratio
tab_model(m1, file = "lmer_output/lmer_summary_odds_free_vs_forced_mturk.html")
tab_model(m1, file = "../../emotions_dashboard/data/lmer_summary_odds_free_vs_forced_mturk.html")
#probs
tab_model(m1, transform =  "plogis", file = "lmer_output/lmer_summary_free_vs_forced_mturk.html")
tab_model(m1, transform =  "plogis", file = "../../emotions_dashboard/data/lmer_summary_free_vs_forced_mturk.html")
######################
# bar plots comparison
######################
library(rstatix)
###############
# correct by survey method
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey
names(correct.survey)[4] <- "correct"
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "survey condition",
title = "Correct responses grouped by Wordnet synonyms") +
# theme(plot.title = element_text(size=9)) +
theme_apa()
correct.survey.plot
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk_group_synonyms.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk_group_synonyms.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk_group_synonyms.r", echo=TRUE)
correct.survey.label.plot
correct.survey.label
correct.label.plot
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced_group_synonyms.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk_espanol/lmer_pooled_free_forced_mturk_espanol_group_synonyms.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/ordinal_lmer_forced_responses.r", echo=TRUE)
library(tidyverse)
library(ordinal)
library(RColorBrewer)
library(ggforce)
library(papaja)
df_students = read_csv("../clean_data/forced_choice_emotion_uw_students_long_format_lmer.csv")
table(df_students$emotion)
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df_students, emotion!="Other")
# drop because = to "I don't know what the person in the picture is feeling" Not "The person is feeling uncertainty"
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
#####################################
#####################################
# prepare data for ordinal lmer
#####################################
#####################################
# filter(df, sentimentScore == "-0.4404")
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
str(df)
df <- na.omit(df)
dim(df)
#####################################
#####################################
# minimal plots
#####################################
#####################################
library(svglite)
# display.brewer.pal(n = 10, name = "RdBu")
# brewer.pal(n = 10, name = "RdBu")
#  "#67001F" "#B2182B" "#D6604D" "#F4A582" "#FDDBC7" "#D1E5F0" "#92C5DE" "#4393C3" "#2166AC" "#053061"
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
## chart for 2-way interaction SEX x ETHNICITY
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
two_way_sex_ethnicity
s <- svgstring(width = 7,
height = 5)
two_way_sex_ethnicity
chart <- s()
cat(chart , file = "lmer_output/sex_ethnicity_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_ethnicity_forced.txt")
dev.off()
## chart for effect of sex
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
sex_chart
s <- svgstring(width = 7,
height = 5)
sex_chart
chart <- s()
cat(chart , file = "lmer_output/sex_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_forced.txt")
dev.off()
## chart for effect of ethnicity
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
et_chart
s <- svgstring(width = 7,
height = 5)
et_chart
chart <- s()
cat(chart , file = "lmer_output/ethnicity_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/ethnicity_forced.txt")
dev.off()
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
two_way_sex_ethnicity
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
s <- svgstring(width = 7,
height = 5)
two_way_sex_ethnicity
chart <- s()
cat(chart , file = "lmer_output/sex_ethnicity_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_ethnicity_forced.txt")
dev.off()
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
s <- svgstring(width = 7,
height = 5)
sex_chart
chart <- s()
cat(chart , file = "lmer_output/sex_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_forced.txt")
dev.off()
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
s <- svgstring(width = 7,
height = 5)
et_chart
chart <- s()
cat(chart , file = "lmer_output/ethnicity_forced.txt")
cat(chart , file = "../../emotions_dashboard/data/ethnicity_forced.txt")
dev.off()
library(tidyverse)
library(ordinal)
library(RColorBrewer)
library(ggforce)
library(papaja)
df_mturk = read_csv("../clean_data_mturk/forced_choice_emotion_mturk_long_format_lmer.csv")
table(df_mturk$emotion)
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df_mturk, emotion!="Other")
# drop because = to "I don't know what the person in the picture is feeling" Not "The person is feeling uncertainty"
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
#####################################
#####################################
# prepare data for ordinal lmer
#####################################
#####################################
# filter(df, sentimentScore == "-0.4404")
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
str(df)
df <- na.omit(df)
dim(df)
#####################################
#####################################
# minimal plots
#####################################
#####################################
library(svglite)
# display.brewer.pal(n = 10, name = "RdBu")
# brewer.pal(n = 10, name = "RdBu")
#  "#67001F" "#B2182B" "#D6604D" "#F4A582" "#FDDBC7" "#D1E5F0" "#92C5DE" "#4393C3" "#2166AC" "#053061"
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
## chart for 2-way interaction SEX x ETHNICITY
two_way_sex_ethnicity <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
s <- svgstring(width = 7,
height = 5)
two_way_sex_ethnicity
chart <- s()
cat(chart , file = "lmer_output/sex_ethnicity_forced_mturk.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_ethnicity_forced_mturk.txt")
dev.off()
## chart for effect of sex
sex_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
s <- svgstring(width = 7,
height = 5)
sex_chart
chart <- s()
cat(chart , file = "lmer_output/sex_forced_mturk.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_forced_mturk.txt")
dev.off()
## chart for effect of ethnicity
et_chart <- df %>%
mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>%
ggplot( aes(x = ethnicityF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
s <- svgstring(width = 7,
height = 5)
et_chart
chart <- s()
cat(chart , file = "lmer_output/ethnicity_forced_mturk.txt")
cat(chart , file = "../../emotions_dashboard/data/ethnicity_forced_mturk.txt")
dev.off()
library(tidyverse)
library(ordinal)
library(RColorBrewer)
library(ggforce)
library(papaja)
# df_students = read_csv("../clean_data/forced_choice_emotion_uw_students_long_format_lmer.csv")
df_mturk_en = read_csv("../clean_data_mturk/forced_choice_emotion_mturk_long_format_lmer.csv")
df_mturk_esp = read_csv("../clean_data_mturk_espanol/forced_choice_emotion_mturk_long_format_lmer_espanol.csv")
#####################################
#####################################
# join dataframes for lmer
#####################################
#####################################
# df_students$condition <- 'english'
df_mturk_en$condition <- 'english'
df_mturk_esp$condition <- 'espanol'
table(df_mturk_en$participantId)
table(df_mturk_esp$participantId)
# add 100 to differentiate participants IDs
df_mturk_esp$participantId = df_mturk_esp$participantId+100
table(df_mturk_esp$participantId)
# language Condition centered
# df_students$conditionC <- -0.5
df_mturk_en$conditionC <- -0.5
df_mturk_esp$conditionC <- 0.5
# mturk samples comparison
df <- rbind(df_mturk_en, df_mturk_esp)
# drop "Other" to break tie with "Neutral" and keep ordinal variable
df <- subset(df, emotion!="Other")
df <- subset(df, emotion!="Uncertain")
table(df$emotion)
table(df$conditionC)
#####################################
#####################################
# prepare data for ordinal lmer
#####################################
#####################################
# filter(df, sentimentScore == "-0.4404")
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Neutral', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
df$conditionF <- as.factor(df$condition)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
table(df$conditionF)
str(df)
df <- na.omit(df)
dim(df)
head(df)
#####################################
#####################################
# minimal plots
#####################################
#####################################
library(svglite)
#
# display.brewer.pal(n = 10, name = "RdBu")
# brewer.pal(n = 10, name = "RdBu")
#  "#67001F" "#B2182B" "#D6604D" "#F4A582" "#FDDBC7" "#D1E5F0" "#92C5DE" "#4393C3" "#2166AC" "#053061"
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
## chart for 3-way interaction SEX x ETHNICITY X CONDITION
three_Way <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF~ethnicityF) +
labs(y = "proportion", x = "survey language", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
three_Way
s <- svgstring(width = 7,
height = 5)
three_Way
chart <- s()
cat(chart , file = "lmer_output/sex_et_cond_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_et_cond_forced_mturk_espanol.txt")
dev.off()
##############################
# get charts numbers as table
comp.prop <- function(df, ethnicity, sex, condition) {
df[df$ethnicityF==ethnicity & df$sexF==sex & df$conditionF==condition,] %>%
group_by(emotionF) %>%
summarise(cnt = n()) %>%
mutate(prop = round(cnt / sum(cnt), 2)) %>%
arrange(desc(emotionF))
}
pane.1.0 <- comp.prop(df, ethnicity="bipoc", sex="female", condition="english")
pane.1.1 <- comp.prop(df, ethnicity="bipoc", sex="female", condition="espanol")
pane.2.0 <- comp.prop(df, ethnicity="white", sex="female", condition="english")
pane.2.1 <- comp.prop(df, ethnicity="white", sex="female", condition="espanol")
pane.3.0 <- comp.prop(df, ethnicity="bipoc", sex="male", condition="english")
pane.3.1 <- comp.prop(df, ethnicity="bipoc", sex="male", condition="espanol")
pane.4.0 <- comp.prop(df, ethnicity="white", sex="male", condition="english")
pane.4.1 <- comp.prop(df, ethnicity="white", sex="male", condition="espanol")
ID <- pane.1.0$emotionF
bipoc.english.female <- pane.1.0$prop
bipoc.espanol.female <- pane.1.1$prop
white.english.female <- pane.2.0$prop
white.espanol.female <- pane.2.1$prop
bipoc.english.male <- pane.3.0$prop
bipoc.espanol.male <- pane.3.1$prop
white.english.male <- pane.4.0$prop
white.espanol.male <- pane.4.1$prop
pane.table <- data.frame(ID = ID,
bipoc.english.female = bipoc.english.female,
bipoc.espanol.female = bipoc.espanol.female,
white.english.female = white.english.female,
white.espanol.female = white.espanol.female,
bipoc.english.male = bipoc.english.male,
bipoc.espanol.male = bipoc.espanol.male,
white.english.male = white.english.male,
white.espanol.male = white.espanol.male)
pane.table <- pane.table %>%
column_to_rownames('ID')
library(gridExtra)
library(grid)
tt1 <- ttheme_minimal()
grid.tables <- grid.arrange(
tableGrob(pane.table[1:2], theme=tt1),
tableGrob(pane.table[3:4], theme=tt1),
tableGrob(pane.table[5:6], theme=tt1),
tableGrob(pane.table[7:8], theme=tt1),
nrow=2)
library("ggplotify")
grid.tables.plot <- as.ggplot(grid.tables)
s <- svgstring(width = 9,
height = 6)
grid.tables.plot
chart <- s()
cat(chart , file = "lmer_output/table_sex_et_cond_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/table_sex_et_cond_forced_mturk_espanol.txt")
dev.off()
## chart for 2-way interaction SEX x CONDITION
two_way_sex_language <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~conditionF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_language
s <- svgstring(width = 7,
height = 5)
two_way_sex_language
chart <- s()
cat(chart , file = "lmer_output/sex_cond_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_cond_forced_mturk_espanol.txt")
dev.off()
## chart for 2-way interaction SEX x ETHNICITY
two_way_sex_ethnicity <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~ethnicityF) +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_sex_ethnicity
s <- svgstring(width = 7,
height = 5)
two_way_sex_ethnicity
chart <- s()
cat(chart , file = "lmer_output/sex_ethnicity_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_ethnicity_forced_mturk_espanol.txt")
dev.off()
## chart for 2-way interaction  ETHNICITY X Condition
two_way_ethnicity_condition <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = ethnicityF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~conditionF) +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
two_way_ethnicity_condition
s <- svgstring(width = 7,
height = 5)
two_way_ethnicity_condition
chart <- s()
cat(chart , file = "lmer_output/ethnicity_cond_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/ethnicity_cond_forced_mturk_espanol.txt")
dev.off()
## chart for effect of condition on emotion
condition_chart <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "survey language", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
condition_chart
s <- svgstring(width = 7,
height = 5)
condition_chart
chart <- s()
cat(chart , file = "lmer_output/cond_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/cond_forced_mturk_espanol.txt")
dev.off()
## chart for effect of SEX on emotion
sex_chart <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "sex", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
sex_chart
s <- svgstring(width = 7,
height = 5)
sex_chart
chart <- s()
cat(chart , file = "lmer_output/sex_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/sex_forced_mturk_espanol.txt")
dev.off()
## chart for effect of ETHNICITY on emotion
et_chart <- df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = ethnicityF, fill = emotionF)) +
geom_bar(position = "fill") +
labs(y = "proportion", x = "ethnicity", fill ="emotion") +
scale_fill_manual(values = RdBu8Alter) +
theme_apa()
et_chart
s <- svgstring(width = 7,
height = 5)
et_chart
chart <- s()
cat(chart , file = "lmer_output/ethnicity_forced_mturk_espanol.txt")
cat(chart , file = "../../emotions_dashboard/data/ethnicity_forced_mturk_espanol.txt")
dev.off()
