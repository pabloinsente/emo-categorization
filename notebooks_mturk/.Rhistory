Levene.Model.F <- lm(Model.F.Res2 ~ participantId, data=df) #ANOVA of the squared residuals
anova(Levene.Model.F) #displays the results
Plot.Model.F <- plot(m2) #creates a fitted vs residual plot
Plot.Model.F
resid1 <- hlm_resid(m2, level = 1, standardize = TRUE)
ggplot(data = resid1, aes(x = participantId, y = .std.ls.resid)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Least-Squares level-1 residuals",
title = "Least-Squares residuals by participant ID") + theme_apa()
resid2 = hlm_resid(m2, level = "participantId", standardize = TRUE, include.ls = FALSE)
ggplot(data = resid2, aes(x = participantId, y = .std.ranef.intercept)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Random effects - intercept",
title = "Intercept random effects against participant ID") + theme_apa()
qqmath(m2, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
#####################################
#####################################
library(lattice)
qqmath(m2, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
#####################################
#####################################
invisible(utils::memory.limit(64000))
infl <- hlm_influence(m2, level = 1)
# IQR = as.numeric(format(IQR(infl$cooksd)*3, scientific = F))
CutOff = 4/nrow(infl)
print(CutOff)
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff) + theme_apa()
high_cooksd = infl[infl$cooksd > CutOff, ] %>%
arrange(desc(cooksd))
head(high_cooksd, n=10)
high_cooksd$id
infl.classes <- hlm_influence(m2, level = "participantId")
length(df$participantId)
length(table(df$participantId))
CutOffGroup = 4/length(table(df$participantId))
CutOffGroup
# dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = "internal", modify = "dotplot")
dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = CutOffGroup, modify = "dotplot") + theme_apa()
high_cooksd_participants = infl.classes[infl.classes$cooksd > CutOffGroup, ] %>%
arrange(desc(cooksd))
high_cooksd_participants
CutOffLeverage = mean(infl$leverage.overall)*3
CutOffLeverage
# dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = CutOffLeverage) + theme_apa()
high_leverage = infl[infl$leverage.overall > CutOffLeverage, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage
# high leverage data points
high_leverage$id
CutOffLeverageParticipants = mean(infl.classes$leverage.overall)*3
CutOffLeverageParticipants
# dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = CutOffLeverageParticipants) + theme_apa()
high_leverage_participants = infl.classes[infl.classes$leverage.overall > CutOffLeverageParticipants, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage_participants
nrow(df)
#################
# remove outliers
#add index column to data frame
df$id <- 1:nrow(df)
high_leverage$id
high_cooksd$id
high_cooksd_participants
`%ni%` <- Negate(`%in%`)
df.filtered <- filter(df, id %ni% high_cooksd$id) # remove high cook obs
df.filtered <- filter(df.filtered, id %ni% high_leverage$id) # remove high leverage obs
df.filtered <- filter(df.filtered, participantId != 43) # remove high cook participants
df.filtered <- filter(df.filtered, participantId != 146)
nrow(df)
nrow(df.filtered)
m3 <-lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df.filtered)
summary(m3)
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
names(sex.score)[4] <- "sentiment score"
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=sentiment score)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
names(sex.score)[4] <- "sentiment score"
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=sentiment score)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
library(papaja)
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=sentiment score)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
rlang::last_error()
`rlang::last_trace()`
rlang::last_trace()
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score
names(sex.score)[4] <- "sentiment score"
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=sentiment score)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
names(sex.score)[4] <- sentiment score
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.score.plot
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.score.plot
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
guides(fill="none")
theme_apa()
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
guides(fill="none") +
theme_apa()
sex.score.plot
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image ethnicity") +
guides(fill="none") +
theme_apa()
et.score.plot
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
sex.et.score
sex.et.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
sex.et.score
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image ethnicity") +
guides(fill="none") +
theme_apa()
et.score.plot
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
et.score.plot
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
names(sex.score)[4] <- sentiment score
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
guides(fill="none") +
theme_apa()
sex.score.plot
ggsave('accuracy-charts/sex_linear_mturk_uw.png', width = 4, height = 4)
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image ethnicity") +
guides(fill="none") +
theme_apa()
et.score.plot
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
`%ni%` <- Negate(`%in%`)
df.filtered <- filter(df, id %ni% high_cooksd$id) # remove high cook obs
df.filtered <- filter(df.filtered, id %ni% high_leverage$id) # remove high leverage obs
df.filtered <- filter(df.filtered, participantId != 43) # remove high cook participants
df.filtered <- filter(df.filtered, participantId != 146)
nrow(df.filtered) # 26998
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
names(sex.score)[4] <- sentiment score
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
guides(fill="none") +
theme_apa()
sex.score.plot
ggsave('accuracy-charts/sex_linear_mturk_uw.png', width = 4, height = 4)
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image ethnicity") +
guides(fill="none") +
theme_apa()
et.score.plot
ggsave('accuracy-charts/et_linear_mturk_uw.png', width = 4, height = 4)
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
ggsave('accuracy-charts/sex_et_linear_mturk_uw.png', width = 4, height = 4)
`%ni%` <- Negate(`%in%`)
df.filtered <- filter(df, id %ni% high_cooksd$id) # remove high cook obs
df.filtered <- filter(df.filtered, id %ni% high_leverage$id) # remove high leverage obs
df.filtered <- filter(df.filtered, participantId != 43) # remove high cook participants
df.filtered <- filter(df.filtered, participantId != 146)
nrow(df.filtered) # 26998
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity",  color="black") +
labs(x = "image sex") +
guides(fill="none") +
theme_apa()
sex.score.plot
ggsave('accuracy-charts/sex_linear_mturk_uw.png', width = 4, height = 4)
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image ethnicity") +
guides(fill="none") +
theme_apa()
et.score.plot
ggsave('accuracy-charts/et_linear_mturk_uw.png', width = 4, height = 4)
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image sex") +
theme_apa()
sex.et.score.plot
ggsave('accuracy-charts/sex_et_linear_mturk_uw.png', width = 6, height = 4)
`%ni%` <- Negate(`%in%`)
df.filtered <- filter(df, id %ni% high_cooksd$id) # remove high cook obs
df.filtered <- filter(df.filtered, id %ni% high_leverage$id) # remove high leverage obs
df.filtered <- filter(df.filtered, participantId != 43) # remove high cook participants
df.filtered <- filter(df.filtered, participantId != 146)
nrow(df.filtered) # 26998
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity",  color="black") +
labs(x = "image sex",
y = "sentiment score") +
guides(fill="none") +
theme_apa()
sex.score.plot
ggsave('accuracy-charts/sex_linear_mturk_uw.png', width = 4, height = 4)
df.filtered$ethnicity <- ifelse(df.filtered$ethnicity == "bipoc", "poc", "white")
et.score <- df.filtered %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image ethnicity",
y = "sentiment score") +
guides(fill="none") +
theme_apa()
et.score.plot
ggsave('accuracy-charts/et_linear_mturk_uw.png', width = 4, height = 4)
sex.et.score <- df.filtered %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image sex",
y = "sentiment score") +
theme_apa()
sex.et.score.plot
ggsave('accuracy-charts/sex_et_linear_mturk_uw.png', width = 6, height = 4)
sex.score
et.score
sex.et.score
length(high_leverage$id)
infl$leverage.overall
infl
summary(m2)
tab_model(m2)
car::Anova(m2, type="3")
summary(m2)
library(lme4)
library(car)
library(lmerTest)
library(tidyverse)
library(ragg)
library(HLMdiag)
library(VCA)
library(hrbrthemes)
library(ggResidpanel)
library(sjPlot)
library(webshot)
library(equatiomatic)
library(svglite)
library(knitr)
library(ggforce)
library(papaja)
setwd("/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk_espanol")
df = read_csv("../clean_data_mturk_espanol/free_labeling_emotion_mturk_long_format_lmer_espanol.csv")
####################################
# Descriptives
library(rstatix)
df %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
df %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
m2<-lmer(
sentimentScore ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
data = df)
summary(m2)
tab_model(m2)
df %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
summary(m2)
df$Model.F.Res<- residuals(m2) #extracts the residuals and places them in a new column in our original data table
df$Abs.Model.F.Res <-abs(df$Model.F.Res) #creates a new column with the absolute value of the residuals
df$Model.F.Res2 <- df$Abs.Model.F.Res^2 #squares the absolute values of the residuals to provide the more robust estimate
Levene.Model.F <- lm(Model.F.Res2 ~ participantId, data=df) #ANOVA of the squared residuals
anova(Levene.Model.F) #displays the results
Plot.Model.F <- plot(m2) #creates a fitted vs residual plot
Plot.Model.F
resid1 <- hlm_resid(m2, level = 1, standardize = TRUE)
ggplot(data = resid1, aes(x = participantId, y = .std.ls.resid)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Least-Squares level-1 residuals",
title = "Least-Squares residuals by participant ID") + theme_apa()
resid2 = hlm_resid(m2, level = "participantId", standardize = TRUE, include.ls = FALSE)
ggplot(data = resid2, aes(x = participantId, y = .std.ranef.intercept)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "loess", se = FALSE) +
labs(y = "Random effects - intercept",
title = "Intercept random effects against participant ID") + theme_apa()
#####################################
#####################################
library(lattice)
qqmath(m2, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
#####################################
#####################################
invisible(utils::memory.limit(64000))
infl <- hlm_influence(m2, level = 1)
# IQR = as.numeric(format(IQR(infl$cooksd)*3, scientific = F))
CutOff = 4/nrow(infl)
print(CutOff)
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff) + theme_apa()
high_cooksd = infl[infl$cooksd > CutOff, ] %>%
arrange(desc(cooksd))
head(high_cooksd, n=10)
high_cooksd$id
infl.classes <- hlm_influence(m2, level = "participantId")
CutOffGroup = 4/length(table(df$participantId))
CutOffGroup
# dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = "internal", modify = "dotplot")
dotplot_diag(infl.classes$cooksd, name = "cooks.distance", cutoff = CutOffGroup, modify = "dotplot") + theme_apa()
high_cooksd_participants = infl.classes[infl.classes$cooksd > CutOffGroup, ] %>%
arrange(desc(cooksd))
high_cooksd_participants
CutOffLeverage = mean(infl$leverage.overall)*3
CutOffLeverage
# dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl$leverage.overall, name = "leverage", cutoff = CutOffLeverage) + theme_apa()
high_leverage = infl[infl$leverage.overall > CutOffLeverage, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage
# high leverage data points
high_leverage$id
CutOffLeverageParticipants = mean(infl.classes$leverage.overall)*3
CutOffLeverageParticipants
# dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = "internal")
dotplot_diag(infl.classes$leverage.overall, name = "leverage", cutoff = CutOffLeverageParticipants) + theme_apa()
high_leverage_participants = infl.classes[infl.classes$leverage.overall > CutOffLeverageParticipants, ] %>%
arrange(desc(leverage.overall))
# head(high_leverage, n=10)
high_leverage_participants
#################
# remove outliers
#add index column to data frame
df$id <- 1:nrow(df)
sex.score <- df.filtered %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score <- df %>%
group_by(sex) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.score
sex.score.plot <- ggplot(sex.score, aes(x=sex, y=mean, fill=sex)) +
geom_bar(position=position_dodge(), stat="identity",  color="black") +
labs(x = "image sex",
y = "sentiment score") +
guides(fill="none") +
theme_apa()
sex.score.plot
ggsave('accuracy-charts/sex_linear_mturk_espanol.png', width = 4, height = 4)
df$ethnicity <- ifelse(df$ethnicity == "bipoc", "poc", "white")
et.score <- df %>%
group_by(ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
et.score
et.score.plot <- ggplot(et.score, aes(x=ethnicity, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image ethnicity",
y = "sentiment score") +
guides(fill="none") +
theme_apa()
et.score.plot
ggsave('accuracy-charts/et_linear_mturk_espanol.png', width = 4, height = 4)
sex.et.score <- df %>%
group_by(sex, ethnicity) %>%
get_summary_stats(sentimentScore, type = "mean_se")
sex.et.score
sex.et.score.plot <- ggplot(sex.et.score, aes(x=sex, y=mean, fill=ethnicity)) +
geom_bar(position=position_dodge(), stat="identity", color="black") +
labs(x = "image sex",
y = "sentiment score") +
theme_apa()
sex.et.score.plot
ggsave('accuracy-charts/sex_et_linear_mturk_espanol.png', width = 6, height = 4)
summary(m2)
tab_model(m2)
format(1.009e-02, scientific=F)
format(8.540e-03, scientific=F)
format(3.295e+0, scientific=F)
format(6.119e+03, scientific=F)
format(3.270e+02, scientific=F)
