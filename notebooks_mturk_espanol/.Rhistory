-0.296 = uncertain,
0 = neutral,
0.2732 = surprise,
0.5574 = happiness,
ordered = TRUE)
recode_factor(df$sentimentScoreF,
`-0.572`  = "anger",
`-0.5994` = "disgust",
# -0.4939 = fear,
# -0.296 = uncertain,
# 0 = neutral,
# 0.2732 = surprise,
# 0.5574 = happiness,
ordered = TRUE)
recode_factor(df$sentimentScoreF,
-0.572  = "anger",
-0.5994 = "disgust",
# -0.4939 = fear,
# -0.296 = uncertain,
# 0 = neutral,
# 0.2732 = surprise,
# 0.5574 = happiness,
ordered = TRUE)
recode_factor(df$sentimentScore,
-0.572  = "anger",
-0.5994 = "disgust",
# -0.4939 = fear,
# -0.296 = uncertain,
# 0 = neutral,
# 0.2732 = surprise,
# 0.5574 = happiness,
ordered = TRUE)
recode_factor(df$sentimentScoreF,
"-0.572"  = "anger",
"-0.5994" = "disgust",
# -0.4939 = fear,
# -0.296 = uncertain,
# 0 = neutral,
# 0.2732 = surprise,
# 0.5574 = happiness,
ordered = TRUE)
factor_test <- factor(df$emotion,
order = TRUE,
levels =c('anger', 'disgust', 'fear', 'uncertain', 'neutral', 'other', 'surprise', 'happiness'))
factor_test
df$emotion
factor_test <- factor(df$emotion,
order = TRUE,
levels =c('Anger', 'Disgust', 'Fear', 'Uncertain', 'Neutral', 'Other', 'Surprise', 'Happiness'))
factor_test
table(factor_test)
str(factor_test)
str(df$emotion)
tab;e(df$emotion)
table(df$emotion)
table(df$sentimentScore)
filter(df, sentimentScore == "-0.5994")
filter(df, sentimentScore == "-0.5719")
filter(df, sentimentScore == "-0.4939")
filter(df, sentimentScore == "-0.4404")
factor_test <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Uncertain', 'Neutral', 'Other', 'Surprise', 'Happiness'))
factor_test
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Uncertain', 'Neutral', 'Other', 'Surprise', 'Happiness'))
str(df)
control= clmm2.control(innerCtrl="noWarn")
ord_m2 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC*conditionC|participantId),
random=participantIdF,
data=df,
Hess = TRUE,
control=control)
summary(ord_m2)
exp(coef(ord_m2)[5])
exp(coef(ord_m2)[1])
(aov <- anova(ord_m2))
ord_m3 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC + (1 + sexC*ethnicityC|participantId),
random=participantIdF,
data=df,
Hess = TRUE,
control=control)
summary(ord_m3)
anova(ord_m2, ord_m3)
summary(m2)
m2.sex <-lmer(
sentimentScore ~ 1 + sexC +  (1+ sexC*ethnicityC|participantId),
data = df,
control=control)
summary(m2.sex)
anova(m2, m2.sex)
m2.sex <-lmer(
sentimentScore ~ 1 + sexC +  (1+ sexC*ethnicityC|participantId),
data = df,
control=control)
control=lmerControl(optimizer ="Nelder_Mead", calc.derivs=FALSE,optCtrl=list(maxfun=2e6), check.nobs.vs.nRE = "ignore")
m2.sex <-lmer(
sentimentScore ~ 1 + sexC +  (1+ sexC*ethnicityC|participantId),
data = df,
control=control)
summary(m2.sex)
anova(m2, m2.sex)
anova(m2, m2.sex)
# library(lme4)
# library(car)
# library(lmerTest)
library(tidyverse)
# library(ragg)
# library(HLMdiag)
# library(VCA)
# library(hrbrthemes)
# library(ggResidpanel)
# library(sjPlot)
# library(webshot)
# library(equatiomatic)
# library(svglite)
# library(knitr)
library(ordinal)
df_students = read_csv("../clean_data/forced_choice_emotion_uw_students_long_format_lmer.csv")
df_mturk_en = read_csv("../clean_data_mturk/forced_choice_emotion_mturk_long_format_lmer.csv")
df_mturk_esp = read_csv("../clean_data_mturk_espanol/forced_choice_emotion_mturk_long_format_lmer_espanol.csv")
df_students$condition <- 'english'
df_mturk_en$condition <- 'english'
df_mturk_esp$condition <- 'espanol'
# language Condition centered
df_students$conditionC <- -0.5
df_mturk_en$conditionC <- -0.5
df_mturk_esp$conditionC <- 0.5
df = rbind(df_mturk_en, df_mturk_esp)
table(df$emotion)
table(df$conditionC)
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Uncertain', 'Neutral', 'Other', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
str(df)
df <- na.omit(df)
df %>% mutate_if(is.character, as.factor)
dim(df)
control= clm2.control(innerCtrl="noWarn")
ord_m1 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC*conditionC|participantId),
data=df,
Hess = TRUE,
control=control)
summary(ord_m1)
ord_m1 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC*conditionC|participantIdF),
data=df,
Hess = TRUE,
control=control)
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
ord_m1 <- clmm2(
emotionF ~ 1 + sexF*ethnicityF*conditionC + (1 + sexC*ethnicityC*conditionC|participantId),
data=df,
Hess = TRUE,
control=control)
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
df$conditionF <- as.factor(df$condition)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
table(df$conditionF)
ord_m1 <- clmm2(
emotionF ~ 1 + sexF*ethnicityF*conditionF + (1 + sexF*ethnicityF|participantId),
data=df,
Hess = TRUE,
control=control)
ord_m1 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC|participantId),
data=df,
Hess = TRUE,
control=control)
ord_m1 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC|participantId),
data=df,
Hess = TRUE)
summary(ord_m1)
exp(coef(ord_m2)[1])
exp(coef(ord_m1)[1])
str(df)
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = condition, fill = emotionF)) +
geom_bar(condition = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = condition, fill = emotionF)) +
geom_bar(condition = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = condition, fill = emotionF)) +
geom_bar(condition = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(condition = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(conditionF = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = cbPalette) +
theme_minimal()
library("RColorBrewer")
display.brewer.all()
brewer.pal(n = 9, name = "RdBu")
RdBu9 <- brewer.pal(n = 9, name = "RdBu")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu9) +
theme_minimal()
table(df$emotion)
# mturk samples comparison
df <- rbind(df_mturk_en, df_mturk_esp)
df <- subset(df, emotion!="Other")
table(df$emotion)
table(df$conditionC)
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Uncertain', 'Neutral', 'Other', 'Surprise', 'Happiness'))
df$emotionF <- factor(df$emotion,
order = TRUE,
levels =c('Disgust', 'Anger', 'Fear', 'Sadness', 'Uncertain', 'Neutral', 'Surprise', 'Happiness'))
df$participantIdF <- as.factor(df$participantId)
df$ethnicityF <- as.factor(df$ethnicity)
df$sexF <- as.factor(df$sex)
df$conditionF <- as.factor(df$condition)
table(df$participantIdF)
table(df$ethnicityF)
table(df$sexF)
table(df$conditionF)
str(df)
df <- na.omit(df)
df %>% mutate_if(is.character, as.factor)
str(df)
RdBu9 <- brewer.pal(n = 8, name = "RdBu")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu9) +
theme_minimal()
table(df$sentimentScore)
brewer.pal(n = 9, name = "RdBu")
display.brewer.pal(n = 8, name = "RdBu")
display.brewer.pal(n = 9, name = "RdBu")
display.brewer.pal(n = 10, name = "RdBu")
brewer.pal(n = 10, name = "RdBu")
RdBu8Alter <- ("#B2182B", "#D6604D", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
RdBu8Alter <- ("#B2182B", "#D6604D", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
RdBu8Alter <- ("#B2182B" "#D6604D", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
RdBu8Alter <- ("#B2182B", "#D6604D", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
RdBu8Alter <- c("#B2182B", "#D6604D", "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
display.brewer.pal(n = 10, name = "RdBu")
display.brewer.pal(n = 8, name = "RdBu")
display.brewer.pal(n = 9, name = "RdBu")
brewer.pal(n = 9, name = "RdBu")
RdBu8Alter <- c("#B2182B", "#D6604D", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") + facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
stat_count(geom = "text", aes(label = paste(round((..count..)/sum(..count..)*100), "%")), position=position_fill(vjust=0.5), colour="white") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
stat_count(geom = "text", aes(label = paste(round((..count..)/sum(..count..)*100), "%")), accuracy = 0.01), position=position_fill(vjust=0.5), colour="white") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
stat_count(geom = "text", aes(label = paste(round((..count..)/sum(..count..)*100), "%")), accuracy = 0.01, position=position_fill(vjust=0.5), colour="white") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill", stat="identity") +
stat_count(geom = "text", aes(label = paste(round((..count..)/sum(..count..)*100), "%")), position=position_fill(vjust=0.5), colour="white") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
stat_count(geom = "text", aes(label = paste(round((..count..)/sum(..count..)*100), "%")), position=position_fill(vjust=0.5), colour="white") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
exp(coef(ols1))
ord_m1))
exp(coef(ord_m1))
#######
## The odds ratio of *sentiment* being rated in category j or above (OR(Y ??? j))
exp(coef(ord_m1)[1])
scale_test(ord_m1)
#######
# Get odds ratio for coefficients
exp(coef(ord_m1))
#######
## The odds ratio of *sentiment* being rated in category j or above (OR(Y ??? j))
exp(coef(ord_m1)[1])
#######
## The odds ratio of *sentiment* being rated in category j or above (OR(Y ??? j))
exp(coef(ord_m1)[9])
exp(coef(ord_m1)[10])
exp(coef(ord_m1)[11])
head(df)
#######
# ConditionC beta = 0.0875, p-value = 0.001 -> indicates spanish-speaking participants rate pictures more positively; more likely to rate in more positive categories
summary(ord_m1)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(coef(ord_m1)[9])))
logit2prob(coef(ord_m1)[9]))
logit2prob(coef(ord_m1)[9]))
logit2prob(coef(ord_m1)[9])
logit = coef(ord_m1)[10]
exp(logit) # odds ratio
logit2prob(logit) # probability
logit = coef(ord_m1)[11]
exp(logit) # odds ratio
logit2prob(logit) # probability
#######
# summary significant results
summary(ord_m1)
aggregate(x = df$sentimentScore,                # Specify data column
by = list(df$sex),              # Specify group indicator
FUN = mean)                           # Specify function (i.e. mean)
aggregate(x = df$sentimentScore,                # Specify data column
by = list(df$ethnicity),              # Specify group indicator
FUN = mean)                           # Specify function (i.e. mean)
plogis(exp(logit))
logit2prob(logit) # probability
plogis(logit)
exp(logit) # odds ratio
logit2prob(logit) # probability
plogis(logit)
library(ggeffects)
#################
#################
# get all probabilities
ggpredictions_ord_m1 <- data.frame(ggpredict(ord_m1, terms = c("sexC", "ethnicityC", "conditionC")))
ord_m1_f <- clmm2(
emotionF ~ 1 + sexF*ethnicityF*conditionF + (1 + sexF*ethnicityF|participantId),
data=df,
Hess = TRUE)
summarise(ord_m1_f)
summary(ord_m1_f)
summary(ord_m1)
coef(ord_m1)[13]
logit = coef(ord_m1)[13]
exp(logit) # odds ratio
logit2prob(logit) # probability
plogis(logit)
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF~ethnicityF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF~conditionF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill")
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(sexF ~ .) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~sexF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = sexF, fill = emotionF)) +
geom_bar(position = "fill") +
facet_grid(. ~conditionF) +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
df %>% mutate(emotionF = ordered(emotionF, levels=rev(levels(emotionF)))) %>% ggplot( aes(x = conditionF, fill = emotionF)) +
geom_bar(position = "fill") +
scale_fill_manual(values = RdBu8Alter) +
theme_minimal()
install.packages('brant')
library(brant)
###############################
###############################
nominal_test(ord_m1)
ord_m1 <- clm(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC|participantId),
data=df,
Hess = TRUE)
#######
# summary significant results
summary(ord_m1)
ord_m2 <- clm(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC|participantId),
data=df,
Hess = TRUE)
summary(ord_m2)
#######
# summary significant results
summary(ord_m1)
ord_m1 <- clmm2(
emotionF ~ 1 + sexC*ethnicityC*conditionC + (1 + sexC*ethnicityC|participantId),
data=df,
Hess = TRUE)
summary(ord_m1)
summary(ord_m2)
###############################
###############################
nominal_test(ord_m2)
anova(ord_m2, type="III")
scale_test(ord_m2)
## Fit cumulative link model:
fm <- clm(rating ~ temp + contact, data=wine)
summary(fm)
## test partial proportional odds assumption for temp and contact:
nominal_test(fm)
###############################
###############################
nominal_test(ord_m2)
scale_test(ord_m2)
#######
# Multicolinearity
df$emotion
#######
# Multicolinearity
df$sentimentScore
#######
# Multicolinearity
df$sex
#######
# Multicolinearity
as.numeric(df$sex)
typeof((df$sex))
#######
# Multicolinearity
as.numeric(df$sexF)
as.numeric(df$conditionF)
library(car)
vif(ord_m1)
vif(ord_m2)
#######
# Multicolinearity
library(stats)
df$conditionF
df$ethnicityF
df$sexF
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
M
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M
chisq.test(df$sexF, df$ethnicityF, correct=FALSE)
chisq.test(df$sexF, df$ethnicityF,df$conditionF, correct=FALSE)
chisq.test(df$sexF, df$ethnicityF,df$conditionF)
chisq.test(df$sexF, df$ethnicityF,df$conditionF, correct=FALSE)
chisq.test(df$sexF, df$ethnicityF, correct=FALSE)
#X-squared = 0.005297, df = 1, p-value = 0.942
chisq.test(df$sexF, df$conditionF, correct=FALSE)
# X-squared = 0.062296, df = 1, p-value = 0.8029
chisq.test(df$ethnicityF, df$conditionF, correct=FALSE)
nominal_test(ord_m2)
