qqmath(m3, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced_group_synonyms.r", echo=TRUE)
# m1 <- glmer(correct ~ 1 + condition.dummy + (1 | participantIdF) +  (1 | photoIdF),
#
#
inf_gm1 <- influence(m1, "photoIdF", maxfun=100)
m1
groups = c("participantIdF", "photoIdF")
inf_gm1 <- influence(m1, groups, maxfun=100)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced_group_synonyms.r", echo=TRUE)
correct.survey.label.plot
# m1 <- glmer(correct ~ 1 + condition.dummy + (1 | participantIdF) +  (1 | photoIdF),
#
#
#
groups = c("participantIdF", "photoIdF")
inf_gm1 <- influence(m1, groups, maxfun=100)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced.r", echo=TRUE)
ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
correct.survey.plot + theme_apa()
library("ggforce")
install.packages("ggforce")
library("ggforce")
correct.survey.plot + theme_apa()
if(!requireNamespace("tinytex", quietly = TRUE)) install.packages("tinytex")
tinytex::install_tinytex()
correct.survey.plot
# Install remotes package if necessary
if(!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")
# Install the stable development version from GitHub
remotes::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
remotes::install_github("crsh/papaja@devel")
correct.survey.plot + theme_apa()
library("papaja")
correct.survey.plot + theme_apa()
correct.survey <- summarySE(df, measurevar="correct", groupvars=c("condition"))
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
correct.survey.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-survey_uw_students_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-survey_uw_students_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-survey-raw.png', width = 4, height = 4)
correct.label <- summarySE(df, measurevar="correct", groupvars=c("label"))
correct.label
correct.label.plot <- ggplot(correct.label, aes(x = reorder(label, -correct), y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.label.plot
s <- svgstring(width = 7,
height = 5)
correct.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label_uw_students_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label_uw_students_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-label-raw.png', width = 6, height = 4)
correct.survey.label <-  summarySEwithin(df, measurevar="correct",
betweenvars="condition",
withinvars=c("label"),
idvar="participantId")
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label-survey_uw_students_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label-survey_uw_students_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-label-survey-raw.png', width = 8, height = 4)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk.r", echo=TRUE)
correct.survey <- summarySE(df, measurevar="correct", groupvars=c("condition"))
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
ggsave('accuracy-charts/correct-survey-raw.png', width = 4, height = 4)
s <- svgstring(width = 7,
height = 5)
correct.survey.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-survey_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-survey_mturk_raw.txt")
dev.off()
correct.label <- summarySE(df, measurevar="correct", groupvars=c("label"))
correct.label
correct.label.plot <- ggplot(correct.label, aes(x = reorder(label, -correct), y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.label.plot
s <- svgstring(width = 7,
height = 5)
correct.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label_mturk_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-survey-emotion-raw.png', width = 6, height = 4)
correct.survey.label <-  summarySEwithin(df, measurevar="correct",
betweenvars="condition",
withinvars=c("label"),
idvar="participantId")
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label-survey_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label-survey_mturk_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-label-survey-raw.png', width = 8, height = 4)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk_espanol/lmer_pooled_free_forced_mturk_espanol.r", echo=TRUE)
library("ggforce")
library("papaja")
correct.survey <- summarySE(df, measurevar="correct", groupvars=c("condition"))
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-survey_mturk_espanol_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-survey_mturk_espanol_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-survey-raw.png', width = 4, height = 4)
correct.label <- summarySE(df, measurevar="correct", groupvars=c("label"))
correct.label
correct.label.plot <- ggplot(correct.label, aes(x = reorder(label, -correct), y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.label.plot
s <- svgstring(width = 7,
height = 5)
correct.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label_mturk_espanol_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label_mturk_espanol_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-survey-emotion-raw.png', width = 6, height = 4)
correct.survey.label <-  summarySEwithin(df, measurevar="correct",
betweenvars="condition",
withinvars=c("label"),
idvar="participantId")
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label-survey_mturk_espanol_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label-survey_mturk_espanol_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-label-survey-raw.png', width = 8, height = 4)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_mean_diff_survey_dueling_bandits.r", echo=TRUE)
library(ggforce)
library(papaja)
df2 %>%
group_by(method) %>%
get_summary_stats(web.frequency, type = "mean_se")
# grouped boxplot
boxplot <- ggplot(df2, aes(x = method, y = web.frequency, color=method)) +
geom_boxplot() +
geom_point() +
guides(color="none") +
theme_apa()
boxplot
s <- svgstring(width = 7,
height = 5)
boxplot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/web_freq_method_boxplot_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/web_freq_method_boxplot_uw_students.txt")
dev.off()
ggsave('accuracy-charts/web_freq_method_boxplot_uw_students.png', width = 8, height = 4)
stat.test <- df2  %>%
t_test(web.frequency ~ method, paired = TRUE) %>%
add_significance()
stat.test
library(lme4)
library(car)
## format predictors
df2$method.dummy <- ifelse(df2$method == "survey", 1, 0)
df2$method.center <- ifelse(df2$method == "survey", .5, -.5)
m1<-lmer(
web.frequency ~ 1 + method.dummy + (1 |photoID),
data = df2)
summary(m1)
tab_model(m1)
tab_model(m1, file = "lmer_output/lmer_summary_method_ranking_uw_students.html")
tab_model(m1, file = "../../emotions_dashboard/data/lmer_summary_method_ranking_uw_students.html")
Anova(m1, type = "III")
aov <- anova(m1)
aov.apa <- kable(aov, digits = 3, format = "html", caption = "ANOVA table for LMER coefficients")
cat(aov.apa, file = "lmer_output/anova_lmer_method_ranking_free_uw_students.html")
cat(aov.apa, file = "../../emotions_dashboard/data/anova_lmer_method_ranking_free_uw_students.html")
m2<-lmer(
web.frequency ~ 1 + method.center + (1 |photoID),
data = df2)
summary(m2)
Anova(m1, type = "III")
### get mathematical formula
formula_lmer <- extract_eq(m1)
cat(formula_lmer, file = "lmer_output/formula_method_lmer_uw_students.txt")
cat(formula_lmer, file = "../../emotions_dashboard/data/formula_method_lmer_uw_students.txt")
method.table <- df2 %>%
group_by(method) %>%
get_summary_stats(web.frequency, type = "mean_se")
names(method.table)[4] <- "web.frequency.mean"
# # Mean + std error of the mean
freq.method <- ggplot(method.table, aes(x=method, y=web.frequency.mean, color=method)) +
geom_errorbar(aes(ymin=web.frequency.mean-se, ymax=web.frequency.mean+se), width=.1) +
geom_point() +
labs (title= "Mean and SEM web frequency by survey method") +
guides(color="none")
# # Mean + std error of the mean
freq.method <- ggplot(method.table, aes(x=method, y=web.frequency.mean, color=method)) +
geom_errorbar(aes(ymin=web.frequency.mean-se, ymax=web.frequency.mean+se), width=.1) +
geom_point() +
labs (title= "Mean and SEM web frequency by survey method") +
guides(color="none") +
theme_apa()
freq.metjod
freq.method
s <- svgstring(width = 7,
height = 5)
freq.method
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/web_freq_method_uw_students.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/web_freq_method_uw_students.txt")
dev.off()
ggsave('accuracy-charts/web_freq_method_uw_students.png', width = 8, height = 4)
library(lmerTest)
library(ragg)
library(HLMdiag)
library(VCA)
df2$Model.F.Res<- residuals(m1) #extracts the residuals and places them in a new column in our original data table
df2$Abs.Model.F.Res <-abs(df2$Model.F.Res) #creates a new column with the absolute value of the residuals
df2$Model.F.Res2 <- df2$Abs.Model.F.Res^2 #squares the absolute values of the residuals to provide the more robust estimate
Levene.Model.F <- lm(Model.F.Res2 ~ photoID, data=df2) #ANOVA of the squared residuals
anova(Levene.Model.F) #displays the results
# save to html table
aov.btw.res <- kable(anova(Levene.Model.F), digits = 3, format = "html", caption = "ANOVA table for between subjects residuals")
cat(aov.btw.res, file = "lmer_output/anova_bwt_lmer_method_uw_students.html")
cat(aov.btw.res, file = "../../emotions_dashboard/data/anova_bwt_lmer_method_uw_students.html")
Plot.Model.F <- plot(m1) #creates a fitted vs residual plot
Plot.Model.F
s <- svgstring(width = 7,
height = 5)
Plot.Model.F
Plot.Model.F <- s()
cat(Plot.Model.F , file = "lmer_output/fitted_vs_residual_plot_method_uw_students.txt")
cat(Plot.Model.F , file = "../../emotions_dashboard/data/fitted_vs_residual_plot_method_uw_students.txt")
dev.off()
require("lattice")
qqmath(m1, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
s <- svgstring(width = 7,
height = 5)
qqmath(m1, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
svg.qqplot <- s()
cat(svg.qqplot, file = "lmer_output/qqplot_lmer_method_uw_students.txt")
cat(svg.qqplot, file = "../../emotions_dashboard/data/qqplot_lmer_method_uw_students.txt")
dev.off()
infl <- hlm_influence(m1, level = 1)
# IQR = as.numeric(format(IQR(infl$cooksd)*3, scientific = F))
CutOff = 4/nrow(infl)
print(CutOff)
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff)
dotplot_diag(infl$cooksd, name = "cooks.distance", cutoff = CutOff) + theme_apa()
qqmath(m1, id=0.05) + theme_apa()#id: identifies values that may be exerting undue influence on the model (i.e. outliers)
Plot.Model.F + theme_apa()
df.filtered %>%
group_by(method) %>%
get_summary_stats(web.frequency, type = "mean_se")
# grouped boxplot
boxplot.re <- ggplot(df.filtered, aes(x = method, y = web.frequency, color=method)) +
geom_boxplot() +
geom_point() +
guides(color="none") +
theme_apa()
boxplot.re
#############
# rerun
m3<-lmer(
web.frequency ~ 1 + method.dummy + (1 |photoID),
data = df.filtered)
summary(m3)
Anova(m3, type = "III")
tab_model(m3)
method.table.re <- df.filtered %>%
group_by(method) %>%
get_summary_stats(web.frequency, type = "mean_se")
names(method.table.re)[4] <- "web.frequency.mean"
method.table.re
# # Mean + std error of the mean
freq.method.re <- ggplot(method.table.re, aes(x=method, y=web.frequency.mean, color=method)) +
geom_errorbar(aes(ymin=web.frequency.mean-se, ymax=web.frequency.mean+se), width=.1) +
geom_point() +
labs (title= "Mean and SEM web frequency by survey method") +
guides(color="none") +
theme_apa()
freq.method.re
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_mean_diff_survey_dueling_bandits.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_mean_diff_survey_dueling_bandits.r", echo=TRUE)
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
library(rstatix)
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
df
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced.r", echo=TRUE)
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey
correct.survey <- summarySE(df, measurevar="correct", groupvars=c("condition"))
correct.survey
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
correct.survey
names(correct.survey)[4] <- "correct"
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
correct.label <- df %>%
group_by(label) %>%
get_summary_stats(correct, type = "mean_se")
correct.label
names(correct.label)[4] <- "correct"
correct.label
correct.label.plot <- ggplot(correct.label, aes(x = reorder(label, -correct), y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.label.plot
correct.survey.label <- df %>%
group_by(condition, label) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey.label
names(correct.label)[5] <- "correct"
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
correct.survey.label
correct.survey.label
names(correct.survey.label)[5] <- "correct"
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks/lmer_pooled_free_forced.r", echo=TRUE)
correct.survey.label.plot
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk.r", echo=TRUE)
library(ggforce)
library(papaja)
library(rstatix)
correct.survey <- df %>%
group_by(condition) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey
correct.survey <- summarySE(df, measurevar="correct", groupvars=c("condition"))
correct.survey
correct.survey.plot <- ggplot(correct.survey, aes(x=condition, y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme_apa()
correct.survey.plot
ggsave('accuracy-charts/correct-survey-raw.png', width = 4, height = 4)
s <- svgstring(width = 7,
height = 5)
correct.survey.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-survey_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-survey_mturk_raw.txt")
dev.off()
correct.label <- df %>%
group_by(label) %>%
get_summary_stats(correct, type = "mean_se")
correct.label
names(correct.label)[4] <- "correct"
correct.label.plot <- ggplot(correct.label, aes(x = reorder(label, -correct), y=correct)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.label.plot
s <- svgstring(width = 7,
height = 5)
correct.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label_mturk_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-survey-emotion-raw.png', width = 6, height = 4)
correct.survey.label <-  summarySEwithin(df, measurevar="correct",
betweenvars="condition",
withinvars=c("label"),
idvar="participantId")
correct.survey.label <- df %>%
group_by(condition, label) %>%
get_summary_stats(correct, type = "mean_se")
correct.survey.label
names(correct.survey.label)[5] <- "correct"
correct.survey.label.plot <- ggplot(correct.survey.label, aes(x = reorder(label, -correct), y=correct, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=correct-se, ymax=correct+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
labs(x = "expected emotion label") +
theme_apa()
correct.survey.label.plot
s <- svgstring(width = 7,
height = 5)
correct.survey.label.plot
svg.string.plot <- s()
cat(svg.string.plot, file = "lmer_output/correct-label-survey_mturk_raw.txt")
cat(svg.string.plot, file = "../../emotions_dashboard/data/correct-label-survey_mturk_raw.txt")
dev.off()
ggsave('accuracy-charts/correct-label-survey-raw.png', width = 8, height = 4)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_pooled_free_forced_mturk.r", echo=TRUE)
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk_espanol/lmer_pooled_free_forced_mturk_espanol.r", echo=TRUE)
correct.survey.plot
correct.label.plot
correct.survey.label.plot
source("//wsl$/Ubuntu-20.04/home/pablo_ubuntu/emo-categorization/notebooks_mturk/lmer_mean_diff_survey_dueling_bandits_mturk.r", echo=TRUE)
qqmath(m1, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
qqmath(m3, id=0.05) #id: identifies values that may be exerting undue influence on the model (i.e. outliers)
