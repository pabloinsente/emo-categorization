borda.happiness.poc.female = read_csv('../../emo-ranking-next/happiness_bipoc_female/borda_lilucb_ranking.csv')
borda.happiness.poc.male = read_csv('../../emo-ranking-next/happiness_bipoc_male/borda_lilucb_ranking.csv')
borda.happiness.white.female = read_csv('../../emo-ranking-next/happiness_white_female/borda_lilucb_ranking.csv')
borda.happiness.white.male = read_csv('../../emo-ranking-next/happiness_white_male/borda_lilucb_ranking.csv')
df.happiness.rank$emotion %>% sort()
borda.happiness.poc.female$Target %>% sort()
borda.happiness.poc.female$Target <- mapvalues(borda.happiness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.happiness.poc.male$Target <- mapvalues(borda.happiness.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.happiness.white.female$Target <- mapvalues(borda.happiness.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.happiness.white.male$Target <- mapvalues(borda.happiness.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
## rename score cols
names(borda.happiness.poc.female)[3] <- 'score.apf'
names(borda.happiness.poc.male)[3] <- 'score.apm'
names(borda.happiness.white.female)[3] <- 'score.awf'
names(borda.happiness.white.male)[3] <- 'score.awm'
## merge borda dfs
df.borda = merge(x = borda.happiness.poc.female[ , c("Target", "score.apf")],
y = borda.happiness.poc.male[ , c("Target", "score.apm")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.happiness.white.female[ , c("Target", "score.awf")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.happiness.white.male[ , c("Target", "score.awm")],
by = "Target",
all.x=TRUE)
## compute row means borda scores
df.borda$score.ave <- rowMeans(df.borda[ , c("score.apf", "score.apm", "score.awf", "score.awm")])
## sort df by average borda score
df.borda.sort <- df.borda[order(-df.borda$score.ave),]
## add rank columns
df.happiness.rank$rank.cnt.survey <- 1:nrow(df.happiness.rank)
unigram.freq$rank.cnt.web <- 1:nrow(unigram.freq)
df.borda.sort$rank.borda <- 1:nrow(df.borda.sort)
## rename
names(df.happiness.rank)[2] <- 'Target'
names(unigram.freq)[1] <- 'Target'
names(unigram.freq)[2] <- 'cnt.web'
## merge
rankd.df = merge(x = df.happiness.rank[ , c("Target", "rank.cnt.survey")],
y = df.borda.sort[ , c("Target", "rank.borda")],
by = "Target")
rankd.df = merge(x = rankd.df,
y = unigram.freq[ , c("Target", "rank.cnt.web")],
by = "Target")
rankd.df
library(ggplot2)
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
#######################
# rank.web ~ rank.borda
ggplot(rankd.df, aes(x=rank.borda, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
###################
# correlations
###################
require(cocor)
library("car")
shapiro.test(rankd.df$rank.cnt.web)
# W = 0.88657, p-value = 0.0113
shapiro.test(rankd.df$rank.cnt.survey)
# W = 0.94326, p-value = 0.1928
shapiro.test(rankd.df$rank.borda)
qqPlot(rankd.df$rank.cnt.web)  # looks good
qqPlot(rankd.df$rank.cnt.survey)  # looks good
qqPlot(rankd.df$rank.borda)  # looks good
#######################
## pearson correlation
cor.web.survey <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.cnt.survey,
method = "pearson")
cor.web.survey
cor.web.borda <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.borda,
method = "pearson")
cor.web.borda
cocor(~rank.cnt.web + rank.cnt.survey | rank.cnt.web + rank.borda, rankd.df)
library(trafo)
#####################
## survey ~ web model
linMod.survey <- lm(rank.cnt.web ~ rank.cnt.survey, data = rankd.df)
assumptions(linMod.survey)
diagnostics(linMod.survey.trafo)
linMod.survey.trafo <- trafo_lm(linMod.survey, trafo = 'logshiftopt')
diagnostics(linMod.survey.trafo)
plot(linMod.survey.trafo)
assumptions(linMod.survey.trafo)
summary(linMod.survey.trafo)
linMod.borda <- lm(rank.cnt.web ~ rank.borda, data = rankd.df)
assumptions(linMod.borda)
linMod.borda.trafo <- trafo_lm(linMod.borda, trafo = 'logshiftopt')
diagnostics(linMod.borda.trafo)
plot(linMod.borda.trafo)
assumptions(linMod.borda.trafo)
summary(linMod.borda.trafo)
# read students ranking
df.sadness.rank = read_csv('../clean_data/free_choice_emotion_uw_students_sadness_rank.csv')
# read frequency in the web rankig
unigram.freq= read_csv('../data/unigram_freq.csv')
# read dueling bandits ranking
borda.sadness.poc.female = read_csv('../../emo-ranking-next/sadness_bipoc_female/borda_lilucb_ranking.csv')
borda.sadness.poc.male = read_csv('../../emo-ranking-next/sadness_bipoc_male/borda_lilucb_ranking.csv')
borda.sadness.white.female = read_csv('../../emo-ranking-next/sadness_white_female/borda_lilucb_ranking.csv')
borda.sadness.white.male = read_csv('../../emo-ranking-next/sadness_white_male/borda_lilucb_ranking.csv')
df.sadness.rank$emotion %>% sort()
borda.sadness.poc.female$Target %>% sort()
borda.sadness.poc.female$Target <- mapvalues(borda.sadness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.male$Target <- mapvalues(borda.sadness.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.female$Target <- mapvalues(borda.sadness.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.male$Target <- mapvalues(borda.sadness.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
## rename score cols
names(borda.sadness.poc.female)[3] <- 'score.apf'
names(borda.sadness.poc.male)[3] <- 'score.apm'
names(borda.sadness.white.female)[3] <- 'score.awf'
names(borda.sadness.white.male)[3] <- 'score.awm'
## merge borda dfs
df.borda = merge(x = borda.sadness.poc.female[ , c("Target", "score.apf")],
y = borda.sadness.poc.male[ , c("Target", "score.apm")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.female[ , c("Target", "score.awf")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.male[ , c("Target", "score.awm")],
by = "Target",
all.x=TRUE)
## compute row means borda scores
df.borda$score.ave <- rowMeans(df.borda[ , c("score.apf", "score.apm", "score.awf", "score.awm")])
## sort df by average borda score
df.borda.sort <- df.borda[order(-df.borda$score.ave),]
## add rank columns
df.sadness.rank$rank.cnt.survey <- 1:nrow(df.sadness.rank)
unigram.freq$rank.cnt.web <- 1:nrow(unigram.freq)
df.borda.sort$rank.borda <- 1:nrow(df.borda.sort)
## rename
names(df.sadness.rank)[2] <- 'Target'
names(unigram.freq)[1] <- 'Target'
names(unigram.freq)[2] <- 'cnt.web'
## merge
rankd.df = merge(x = df.sadness.rank[ , c("Target", "rank.cnt.survey")],
y = df.borda.sort[ , c("Target", "rank.borda")],
by = "Target")
rankd.df = merge(x = rankd.df,
y = unigram.freq[ , c("Target", "rank.cnt.web")],
by = "Target")
rankd.df
# read students ranking
df.sadness.rank = read_csv('../clean_data/free_choice_emotion_uw_students_sadness_rank.csv')
# read frequency in the web rankig
unigram.freq= read_csv('../data/unigram_freq.csv')
# read dueling bandits ranking
borda.sadness.poc.female = read_csv('../../emo-ranking-next/sadness_bipoc_female/borda_lilucb_ranking.csv')
borda.sadness.poc.male = read_csv('../../emo-ranking-next/sadness_bipoc_male/borda_lilucb_ranking.csv')
borda.sadness.white.female = read_csv('../../emo-ranking-next/sadness_white_female/borda_lilucb_ranking.csv')
borda.sadness.white.male = read_csv('../../emo-ranking-next/sadness_white_male/borda_lilucb_ranking.csv')
#####################
# align spelling
#####################
df.sadness.rank$emotion %>% sort()
borda.sadness.poc.female$Target %>% sort()
# # remove words not present in both df
# borda.anger.poc.female<-subset(borda.anger.poc.female, Target!="frusturated")
# df.anger.rank<-subset(df.anger.rank, emotion!="none" & emotion!="surprise")
borda.sadness.poc.female$Target <- mapvalues(borda.sadness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.male$Target <- mapvalues(borda.sadness.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.female$Target <- mapvalues(borda.sadness.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.male$Target <- mapvalues(borda.sadness.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
##############################
# pooled ranking borda scores
##############################
## rename score cols
names(borda.sadness.poc.female)[3] <- 'score.apf'
names(borda.sadness.poc.male)[3] <- 'score.apm'
names(borda.sadness.white.female)[3] <- 'score.awf'
names(borda.sadness.white.male)[3] <- 'score.awm'
## merge borda dfs
df.borda = merge(x = borda.sadness.poc.female[ , c("Target", "score.apf")],
y = borda.sadness.poc.male[ , c("Target", "score.apm")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.female[ , c("Target", "score.awf")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.male[ , c("Target", "score.awm")],
by = "Target",
all.x=TRUE)
## compute row means borda scores
df.borda$score.ave <- rowMeans(df.borda[ , c("score.apf", "score.apm", "score.awf", "score.awm")])
## sort df by average borda score
df.borda.sort <- df.borda[order(-df.borda$score.ave),]
#######################
# merge dataframes
#######################
## add rank columns
df.sadness.rank$rank.cnt.survey <- 1:nrow(df.sadness.rank)
unigram.freq$rank.cnt.web <- 1:nrow(unigram.freq)
df.borda.sort$rank.borda <- 1:nrow(df.borda.sort)
## rename
names(df.sadness.rank)[2] <- 'Target'
names(unigram.freq)[1] <- 'Target'
names(unigram.freq)[2] <- 'cnt.web'
## merge
rankd.df = merge(x = df.sadness.rank[ , c("Target", "rank.cnt.survey")],
y = df.borda.sort[ , c("Target", "rank.borda")],
by = "Target")
rankd.df = merge(x = rankd.df,
y = unigram.freq[ , c("Target", "rank.cnt.web")],
by = "Target")
rankd.df
df.borda.sort
# read students ranking
df.sadness.rank = read_csv('../clean_data/free_choice_emotion_uw_students_sadness_rank.csv')
# read frequency in the web rankig
unigram.freq= read_csv('../data/unigram_freq.csv')
# read dueling bandits ranking
borda.sadness.poc.female = read_csv('../../emo-ranking-next/sadness_bipoc_female/borda_lilucb_ranking.csv')
borda.sadness.poc.male = read_csv('../../emo-ranking-next/sadness_bipoc_male/borda_lilucb_ranking.csv')
borda.sadness.white.female = read_csv('../../emo-ranking-next/sadness_white_female/borda_lilucb_ranking.csv')
borda.sadness.white.male = read_csv('../../emo-ranking-next/sadness_white_male/borda_lilucb_ranking.csv')
df.sadness.rank$emotion %>% sort()
borda.sadness.poc.female$Target %>% sort()
borda.sadness.poc.female$Target <- mapvalues(borda.sadness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.female$Target <- mapvalues(borda.sadness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.male$Target <- mapvalues(borda.sadness.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.female$Target <- mapvalues(borda.sadness.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.male$Target <- mapvalues(borda.sadness.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.female
borda.sadness.poc.female$Target
borda.sadness.poc.female$Target %>% sort()
# read dueling bandits ranking
borda.sadness.poc.female = read_csv('../../emo-ranking-next/sadness_bipoc_female/borda_lilucb_ranking.csv')
borda.sadness.poc.male = read_csv('../../emo-ranking-next/sadness_bipoc_male/borda_lilucb_ranking.csv')
borda.sadness.white.female = read_csv('../../emo-ranking-next/sadness_white_female/borda_lilucb_ranking.csv')
borda.sadness.white.male = read_csv('../../emo-ranking-next/sadness_white_male/borda_lilucb_ranking.csv')
df.sadness.rank$emotion %>% sort()
borda.sadness.poc.female$Target %>% sort()
# keep only 'sad'
borda.sadness.poc.female<-subset(borda.anger.poc.female, Target!="sadness")
borda.sadness.poc.male<-subset(borda.anger.poc.female, Target!="sadness")
# keep only 'sad'
borda.sadness.poc.female<-subset(borda.sadness.poc.female, Target!="sadness")
borda.sadness.poc.male<-subset(borda.sadness.poc.male, Target!="sadness")
borda.sadness.white.female<-subset(borda.sadness.white.female, Target!="sadness")
borda.sadness.white.male<-subset(borda.sadness.white.male, Target!="sadness")
borda.sadness.poc.female$Target <- mapvalues(borda.sadness.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.poc.male$Target <- mapvalues(borda.sadness.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.female$Target <- mapvalues(borda.sadness.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.sadness.white.male$Target <- mapvalues(borda.sadness.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
## rename score cols
names(borda.sadness.poc.female)[3] <- 'score.apf'
names(borda.sadness.poc.male)[3] <- 'score.apm'
names(borda.sadness.white.female)[3] <- 'score.awf'
names(borda.sadness.white.male)[3] <- 'score.awm'
## merge borda dfs
df.borda = merge(x = borda.sadness.poc.female[ , c("Target", "score.apf")],
y = borda.sadness.poc.male[ , c("Target", "score.apm")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.female[ , c("Target", "score.awf")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.sadness.white.male[ , c("Target", "score.awm")],
by = "Target",
all.x=TRUE)
## compute row means borda scores
df.borda$score.ave <- rowMeans(df.borda[ , c("score.apf", "score.apm", "score.awf", "score.awm")])
## sort df by average borda score
df.borda.sort <- df.borda[order(-df.borda$score.ave),]
## add rank columns
df.sadness.rank$rank.cnt.survey <- 1:nrow(df.sadness.rank)
unigram.freq$rank.cnt.web <- 1:nrow(unigram.freq)
df.borda.sort$rank.borda <- 1:nrow(df.borda.sort)
## rename
names(df.sadness.rank)[2] <- 'Target'
names(unigram.freq)[1] <- 'Target'
names(unigram.freq)[2] <- 'cnt.web'
## merge
rankd.df = merge(x = df.sadness.rank[ , c("Target", "rank.cnt.survey")],
y = df.borda.sort[ , c("Target", "rank.borda")],
by = "Target")
rankd.df = merge(x = rankd.df,
y = unigram.freq[ , c("Target", "rank.cnt.web")],
by = "Target")
rankd.df
library(ggplot2)
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
#######################
# rank.web ~ rank.borda
ggplot(rankd.df, aes(x=rank.borda, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
rankd.df$rank.cnt.web
rankd.df$rank.cnt.web %>% sort()
rankd.df<-subset(rankd.df, rank.cnt.web!="134051")
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
#######################
# rank.web ~ rank.borda
ggplot(rankd.df, aes(x=rank.borda, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
rankd.df$rank.cnt.web %>% sort()
rankd.df<-subset(rankd.df, rank.cnt.web!="134051" & rank.cnt.web!="52242")
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
#######################
# rank.web ~ rank.borda
ggplot(rankd.df, aes(x=rank.borda, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
###################
# correlations
###################
require(cocor)
library("car")
shapiro.test(rankd.df$rank.cnt.web)
# W = 0.92593, p-value = 0.237
shapiro.test(rankd.df$rank.cnt.survey)
# W = 0.94215, p-value = 0.4102
shapiro.test(rankd.df$rank.borda)
qqPlot(rankd.df$rank.cnt.web)  # looks good
qqPlot(rankd.df$rank.cnt.survey)  # looks good
qqPlot(rankd.df$rank.borda)  # looks good
#######################
## pearson correlation
cor.web.survey <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.cnt.survey,
method = "pearson")
cor.web.survey
cor.web.borda <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.borda,
method = "pearson")
cor.web.borda
cocor(~rank.cnt.web + rank.cnt.survey | rank.cnt.web + rank.borda, rankd.df)
# read dueling bandits ranking
borda.surprise.poc.female = read_csv('../../emo-ranking-next/surprise_bipoc_female/borda_lilucb_ranking.csv')
borda.surprise.poc.male = read_csv('../../emo-ranking-next/surprise_bipoc_male/borda_lilucb_ranking.csv')
borda.surprise.white.female = read_csv('../../emo-ranking-next/surprise_white_female/borda_lilucb_ranking.csv')
borda.surprise.white.male = read_csv('../../emo-ranking-next/surprise_white_male/borda_lilucb_ranking.csv')
df.surprise.rank$emotion %>% sort()
df.surprise.rank$emotion %>% sort()
# read students ranking
df.surprise.rank = read_csv('../clean_data/free_choice_emotion_uw_students_surprise_rank.csv.csv')
# read students ranking
df.surprise.rank = read_csv('../clean_data/free_choice_emotion_uw_students_surprise_rank.csv.csv')
# read frequency in the web rankig
unigram.freq= read_csv('../data/unigram_freq.csv')
# read students ranking
df.surprise.rank = read_csv('../clean_data/free_choice_emotion_uw_students_surprise_rank.csv')
# read frequency in the web rankig
unigram.freq= read_csv('../data/unigram_freq.csv')
# read dueling bandits ranking
borda.surprise.poc.female = read_csv('../../emo-ranking-next/surprise_bipoc_female/borda_lilucb_ranking.csv')
borda.surprise.poc.male = read_csv('../../emo-ranking-next/surprise_bipoc_male/borda_lilucb_ranking.csv')
borda.surprise.white.female = read_csv('../../emo-ranking-next/surprise_white_female/borda_lilucb_ranking.csv')
borda.surprise.white.male = read_csv('../../emo-ranking-next/surprise_white_male/borda_lilucb_ranking.csv')
df.surprise.rank$emotion %>% sort()
borda.surprise.poc.female$Target %>% sort()
borda.surprise.poc.female$Target <- mapvalues(borda.surprise.poc.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.surprise.poc.male$Target <- mapvalues(borda.surprise.poc.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.surprise.white.female$Target <- mapvalues(borda.surprise.white.female$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
borda.surprise.white.male$Target <- mapvalues(borda.surprise.white.male$Target,
from=c("angry", "happy", "disgusted", "sad", "smiling"),
to=c("anger", "happiness", "disgust", 'sadness', 'smile'))
## rename score cols
names(borda.surprise.poc.female)[3] <- 'score.apf'
names(borda.surprise.poc.male)[3] <- 'score.apm'
names(borda.surprise.white.female)[3] <- 'score.awf'
names(borda.surprise.white.male)[3] <- 'score.awm'
## merge borda dfs
df.borda = merge(x = borda.surprise.poc.female[ , c("Target", "score.apf")],
y = borda.surprise.poc.male[ , c("Target", "score.apm")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.surprise.white.female[ , c("Target", "score.awf")],
by = "Target",
all.x=TRUE)
df.borda = merge(x = df.borda,
y = borda.surprise.white.male[ , c("Target", "score.awm")],
by = "Target",
all.x=TRUE)
## compute row means borda scores
df.borda$score.ave <- rowMeans(df.borda[ , c("score.apf", "score.apm", "score.awf", "score.awm")])
## sort df by average borda score
df.borda.sort <- df.borda[order(-df.borda$score.ave),]
## add rank columns
df.surprise.rank$rank.cnt.survey <- 1:nrow(df.surprise.rank)
unigram.freq$rank.cnt.web <- 1:nrow(unigram.freq)
df.borda.sort$rank.borda <- 1:nrow(df.borda.sort)
## rename
names(df.surprise.rank)[2] <- 'Target'
names(unigram.freq)[1] <- 'Target'
names(unigram.freq)[2] <- 'cnt.web'
## merge
rankd.df = merge(x = df.surprise.rank[ , c("Target", "rank.cnt.survey")],
y = df.borda.sort[ , c("Target", "rank.borda")],
by = "Target")
rankd.df = merge(x = rankd.df,
y = unigram.freq[ , c("Target", "rank.cnt.web")],
by = "Target")
rankd.df
library(ggplot2)
########################
# rank.web ~ rank.survey
ggplot(rankd.df, aes(x=rank.cnt.survey, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
#######################
# rank.web ~ rank.borda
ggplot(rankd.df, aes(x=rank.borda, y=rank.cnt.web)) +
geom_point() +
geom_smooth()
###################
# correlations
###################
require(cocor)
library("car")
shapiro.test(rankd.df$rank.cnt.web)
# W = 0.93632, p-value = 0.1217
shapiro.test(rankd.df$rank.cnt.survey)
#W = 0.94253, p-value = 0.1694
shapiro.test(rankd.df$rank.borda)
qqPlot(rankd.df$rank.cnt.web)  # looks good
qqPlot(rankd.df$rank.cnt.survey)  # looks good
qqPlot(rankd.df$rank.borda)  # looks good
#######################
## pearson correlation
cor.web.survey <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.cnt.survey,
method = "pearson")
cor.web.survey
cor.web.borda <- cor.test(rankd.df$rank.cnt.web,
rankd.df$rank.borda,
method = "pearson")
cor.web.borda
cocor(~rank.cnt.web + rank.cnt.survey | rank.cnt.web + rank.borda, rankd.df)
